#include "pch.h"
#include <map>
#include <unordered_map>
#include <string>

std::unordered_map<std::wstring, std::wstring> known_iids = {
    {L"00000000-0000-0000-c000-000000000046", L"IUnknown"},
    {L"00000131-0000-0000-c000-000000000046", L"IRemUnknown"},
    {L"00000143-0000-0000-c000-000000000046", L"IRemUnknown2"},
    {L"000001a0-0000-0000-c000-000000000046", L"IRemoteSCMActivator"},
    {L"00020400-0000-0000-c000-000000000046", L"IDispatch"},
    {L"00020401-0000-0000-c000-000000000046", L"ITypeInfo"},
    {L"00020402-0000-0000-c000-000000000046", L"ITypeLib"},
    {L"00020403-0000-0000-c000-000000000046", L"ITypeComp"},
    {L"00020404-0000-0000-c000-000000000046", L"IEnumVARIANT"},
    {L"00020411-0000-0000-c000-000000000046", L"ITypeLib2"},
    {L"00020412-0000-0000-c000-000000000046", L"ITypeInfo2"},
    {L"004c6a2b-0c19-4c69-9f5c-a269b2560db9", L"IWindowsDriverUpdate4"},
    {L"0191775e-bcff-445a-b4f4-3bdda54e2816", L"IAppHostPropertyCollection"},
    {L"01954e6b-9254-4e6e-808c-c9e05d007696", L"IVssEnumMgmtObject"},
    {L"027947e1-d731-11ce-a357-000000000001", L"IEnumWbemClassObject"},
    {L"0316560b-5db4-4ed9-bbb5-213436ddc0d9", L"IVdsRemovable"},
    {L"0344cdda-151e-4cbf-82da-66ae61e97754", L"IAppHostElementSchemaCollection"},
    {L"034634fd-ba3f-11d1-856a-00a0c944138c", L"IManageTelnetSessions"},
    {L"038374ff-098b-11d8-9414-505054503030", L"IDataCollector"},
    {L"03837502-098b-11d8-9414-505054503030", L"IDataCollectorCollection"},
    {L"03837506-098b-11d8-9414-505054503030", L"IPerformanceCounterDataCollector"},
    {L"0383750b-098b-11d8-9414-505054503030", L"ITraceDataCollector"},
    {L"03837510-098b-11d8-9414-505054503030", L"ITraceDataProviderCollection"},
    {L"03837512-098b-11d8-9414-505054503030", L"ITraceDataProvider"},
    {L"03837514-098b-11d8-9414-505054503030", L"IConfigurationDataCollector"},
    {L"03837516-098b-11d8-9414-505054503030", L"IAlertDataCollector"},
    {L"0383751a-098b-11d8-9414-505054503030", L"IApiTracingDataCollector"},
    {L"03837520-098b-11d8-9414-505054503030", L"IDataCollectorSet"},
    {L"03837524-098b-11d8-9414-505054503030", L"IDataCollectorSetCollection"},
    {L"03837533-098b-11d8-9414-505054503030", L"IValueMapItem"},
    {L"03837534-098b-11d8-9414-505054503030", L"IValueMap"},
    {L"0383753a-098b-11d8-9414-505054503030", L"ISchedule"},
    {L"0383753d-098b-11d8-9414-505054503030", L"IScheduleCollection"},
    {L"03837541-098b-11d8-9414-505054503030", L"IDataManager"},
    {L"03837543-098b-11d8-9414-505054503030", L"IFolderAction"},
    {L"03837544-098b-11d8-9414-505054503030", L"IFolderActionCollection"},
    {L"04c6895d-eaf2-4034-97f3-311de9be413a", L"IUpdateSearcher3"},
    {L"070669eb-b52f-11d1-9270-00c04fbbbfb3", L"IDataFactory2"},
    {L"0716caf8-7d05-4a46-8099-77594be91394", L"IAppHostConstantValue"},
    {L"0770687e-9f36-4d6f-8778-599d188461c9", L"IFsrmFileManagementJob"},
    {L"07e5c822-f00c-47a1-8fce-b244da56fd06", L"IVdsDisk"},
    {L"07f7438c-7709-4ca5-b518-91279288134e", L"IUpdateCollection"},
    {L"0818a8ef-9ba9-40d8-a6f9-e22833cc771e", L"IVdsService"},
    {L"081e7188-c080-4ff3-9238-29f66d6cabfd", L"IMessenger"},
    {L"08a90f5f-0702-48d6-b45f-02a9885a9768", L"IAppHostChildElementCollection"},
    {L"09829352-87c2-418d-8d79-4133969a489d", L"IAppHostChangeHandler"},
    {L"0ac13689-3134-47c6-a17c-4669216801be", L"IVdsServiceHba"},
    {L"0b1c2170-5732-4e0e-8cd3-d9b16f3b84d7", L"authzr"},
    {L"0bb8531d-7e8d-424f-986c-a0b8f60a3e7b", L"IUpdateServiceManager2"},
    {L"0d521700-a372-4bef-828b-3d00c10adebd", L"IWindowsDriverUpdateEntryCollection",},
    {L"0dd8a158-ebe6-4008-a1d9-b7ecc8f1104b", L"IAppHostSectionGroup"},
    {L"0e3d6630-b46b-11d1-9d2d-006008b0e5ca", L"ICatalogTableRead"},
    {L"0e3d6631-b46b-11d1-9d2d-006008b0e5ca", L"ICatalogTableWrite"},
    {L"0eac4842-8763-11cf-a743-00aa00a3f00d", L"IDataFactory"},
    {L"0fb15084-af41-11ce-bd2b-204c4f4f5020", L"ITransaction"},
    {L"1088a980-eae5-11d0-8d9b-00a02453c337", L"qm2qm"},
    {L"10c5e575-7984-4e81-a56b-431f5f92ae42", L"IVdsProvider"},
    {L"112eda6b-95b3-476f-9d90-aee82c6b8181", L"IUpdate3"},
    {L"118610b7-8d94-4030-b5b8-500889788e4e", L"IEnumVdsObject"},
    {L"11899a43-2b68-4a76-92e3-a3d6ad8c26ce", L"TermSrvNotification"},
    {L"11942d87-a1de-4e7f-83fb-a840d9c5928d", L"IClusterStorage3"},
    {L"12345678-1234-abcd-ef00-0123456789ab", L"winspool"},
    {L"12345678-1234-abcd-ef00-01234567cffb", L"logon"},
    {L"12345778-1234-abcd-ef00-0123456789ab", L"lsarpc"},
    {L"12345778-1234-abcd-ef00-0123456789ac", L"samr"},
    {L"1257b580-ce2f-4109-82d6-a9459d0bf6bc", L"SessEnvPublicRpc"},
    {L"12937789-e247-4917-9c20-f3ee9c7ee783", L"IFsrmActionCommand"},
    {L"135698d2-3a37-4d26-99df-e2bb6ae3ac61", L"IVolumeClient3"},
    {L"13b50bff-290a-47dd-8558-b7c58db1a71a", L"IVdsPack2"},
    {L"144fe9b0-d23d-4a8b-8634-fb4457533b7a", L"IUpdate2"},
    {L"14a8831c-bc82-11d2-8a64-0008c7457e5d", L"ExtendedError"},
    {L"14fbe036-3ed7-4e10-90e9-a5ff991aff01", L"IVdsServiceIscsi"},
    {L"1518b460-6518-4172-940f-c75883b24ceb", L"IUpdateService2"},
    {L"1544f5e0-613c-11d1-93df-00c04fd7bd09", L"rfri"},
    {L"1568a795-3924-4118-b74b-68d8f0fa5daf", L"IFsrmQuotaBase"},
    {L"15a81350-497d-4aba-80e9-d4dbcc5521fe", L"IFsrmStorageModuleDefinition"},
    {L"15fc031c-0652-4306-b2c3-f558b8f837e2", L"IVdsServiceSw"},
    {L"17fdd703-1827-4e34-79d4-24a55c53bb37", L"msgsvc"},
    {L"182c40fa-32e4-11d0-818b-00a0c9231c29", L"ICatalogSession"},
    {L"1a9134dd-7b39-45ba-ad88-44d01ca47f28", L"RemoteRead"},
    {L"1a927394-352e-4553-ae3f-7cf4aafca620", L"WdsRpcInterface"},
    {L"1bb617b8-3886-49dc-af82-a6c90fa35dda", L"IFsrmMutableCollection"},
    {L"1be2275a-b315-4f70-9e44-879b3a2a53f2", L"IVdsVolumeOnline"},
    {L"1c1c45ee-4395-11d2-b60b-00104b703efd", L"IWbemFetchSmartEnum"},
    {L"1d118904-94b3-4a64-9fa6-ed432666a7b9", L"ICatalog64BitSupport"},
    {L"1e062b84-e5e6-4b4b-8a25-67b81e8f13e8", L"IVdsVDisk"},
    {L"1f7b1697-ecb2-4cbb-8a0e-75c427f4a6f0", L"IImport2"},
    {L"1ff70682-0a51-30e8-076d-740be8cee98b", L"atsvc"},
    {L"205bebf8-dd93-452a-95a6-32b566b35828", L"IFsrmFileScreenTemplate"},
    {L"20610036-fa22-11cf-9823-00a0c911e5df", L"rasrpc"},
    {L"20d15747-6c48-4254-a358-65039fd8c63c", L"IServerHealthReport2"},
    {L"214a0f28-b737-4026-b847-4f9e37d79529", L"IVssDifferentialSoftwareSnapshotMgmt",},
    {L"21546ae8-4da5-445e-987f-627fea39c5e8", L"IWRMConfig"},
    {L"22bcef93-4a3f-4183-89f9-2f8b8a628aee", L"IFsrmObject"},
    {L"22e5386d-8b12-4bf0-b0ec-6a1ea419e366", L"NetEventForwarder"},
    {L"23857e3c-02ba-44a3-9423-b1c900805f37", L"IUpdateServiceManager"},
    {L"23c9dd26-2355-4fe2-84de-f779a238adbd", L"IProcessDump"},
    {L"27b899fe-6ffa-4481-a184-d3daade8a02b", L"IFsrmReportManager"},
    {L"27e94b0d-5139-49a2-9a61-93522dc54652", L"IUpdate4"},
    {L"29822ab7-f302-11d0-9953-00c04fd919c1", L"IWamAdmin"},
    {L"29822ab8-f302-11d0-9953-00c04fd919c1", L"IWamAdmin2"},
    {L"2a3eb639-d134-422d-90d8-aaa1b5216202", L"IResourceManager2"},
    {L"2abd757f-2851-4997-9a13-47d2a885d6ca", L"IVdsHbaPort"},
    {L"2c9273e0-1dc3-11d3-b364-00105a1f8177", L"IWbemRefreshingServices"},
    {L"2d9915fb-9d42-4328-b782-1b46819fab9e", L"IAppHostMethodSchema"},
    {L"2dbe63c4-b340-48a0-a5b0-158e07fc567e", L"IFsrmActionReport"},
    {L"300f3532-38cc-11d0-a3f0-0020af6b0add", L"trkwks"},
    {L"31a83ea0-c0e4-4a2c-8a01-353cc2a4c60a", L"IAppHostMappingExtension"},
    {L"326af66f-2ac0-4f68-bf8c-4759f054fa29", L"IFsrmPropertyCondition"},
    {L"338cd001-2244-31f1-aaaa-900038001003", L"winreg"},
    {L"367abb81-9844-35f1-ad32-98f038001003", L"svcctl"},
    {L"370af178-7758-4dad-8146-7391f6e18585", L"IAppHostConfigLocation"},
    {L"377f739d-9647-4b8e-97d2-5ffce6d759cd", L"IFsrmQuota"},
    {L"378e52b0-c0a9-11cf-822d-00aa0051e40f", L"sasec"},
    {L"3858c0d5-0f35-4bf5-9714-69874963bc36", L"IVdsAdvancedDisk3"},
    {L"38a0a9ab-7cc8-4693-ac07-1f28bd03c3da", L"IVdsIscsiInitiatorPortal"},
    {L"38e87280-715c-4c7d-a280-ea1651a19fef", L"IFsrmReportJob"},
    {L"3919286a-b10c-11d0-9ba8-00c04fd92ef5", L"dssetup"},
    {L"39322a2d-38ee-4d0d-8095-421a80849a82", L"IFsrmDerivedObjectsResult"},
    {L"3a410f21-553f-11d1-8e5e-00a0c92c9d5d", L"IDMRemoteServer"},
    {L"3a56bfb8-576c-43f7-9335-fe4838fd7e37", L"ICategoryCollection"},
    {L"3b69d7f5-9d94-4648-91ca-79939ba263bf", L"IVdsPack"},
    {L"3bbed8d9-2c9a-4b21-8936-acb2f995be6c", L"INtmsObjectManagement3"},
    {L"3dde7c30-165d-11d1-ab8f-00805f14db40", L"BackupKey"},
    {L"3f3b1b86-dbbe-11d1-9da6-00805f85cfe3", L"IContainerControl"},
    {L"40f73c8b-687d-4a13-8d96-3d7f2e683936", L"IVdsDisk2"},
    {L"41208ee0-e970-11d1-9b9e-00e02c064c39", L"qmmgmt"},
    {L"4173ac41-172d-4d52-963c-fdc7e415f717", L"IFsrmQuotaTemplateManager"},
    {L"423ec01e-2e35-11d2-b604-00104b703efd", L"IWbemWCOSmartEnum"},
    {L"426677d5-018c-485c-8a51-20b86d00bdc4", L"IFsrmFileGroupManager"},
    {L"42dc3511-61d5-48ae-b6dc-59fc00c0a8d6", L"IFsrmQuotaObject"},
    {L"44aca674-e8fc-11d0-a07c-00c04fb68820", L"IWbemContext"},
    {L"44aca675-e8fc-11d0-a07c-00c04fb68820", L"IWbemCallResult"},
    {L"44e265dd-7daf-42cd-8560-3cdb6e7a2729", L"TsProxyRpcInterface"},
    {L"450386db-7409-4667-935e-384dbbee2a9e", L"IAppHostPropertySchema"},
    {L"456129e2-1078-11d2-b0f9-00805fc73204", L"ICatalogUtils"},
    {L"45f52c28-7f9f-101a-b52b-08002b2efabe", L"winsif"},
    {L"46297823-9940-4c09-aed9-cd3ea6d05968", L"IUpdateIdentity"},
    {L"4639db2a-bfc5-11d2-9318-00c04fbbbfb3", L"IDataFactory3"},
    {L"47782152-d16c-4229-b4e1-0ddfe308b9f6", L"IFsrmPropertyDefinition2"},
    {L"47cde9a1-0bf6-11d2-8016-00c04fb9988e", L"ICapabilitySupport"},
    {L"481e06cf-ab04-4498-8ffe-124a0a34296d", L"IWRMCalendar"},
    {L"4846cb01-d430-494f-abb4-b1054999fb09", L"IFsrmQuotaManagerEx"},
    {L"484809d6-4239-471b-b5bc-61df8c23ac48", L"TermSrvSession"},
    {L"497d95a6-2d27-4bf5-9bbd-a6046957133c", L"RCMListener"},
    {L"49ebd502-4a96-41bd-9e3e-4c5057f4250c", L"IWindowsDriverUpdate3"},
    {L"4a2f5c31-cfd9-410e-b7fb-29a653973a0f", L"IAutomaticUpdates2"},
    {L"4a6b0e15-2e38-11d1-9965-00c04fbbb345", L"IEventSubscription"},
    {L"4a6b0e16-2e38-11d1-9965-00c04fbbb345", L"IEventSubscription2"},
    {L"4a73fee4-4102-4fcc-9ffb-38614f9ee768", L"IFsrmProperty"},
    {L"4afc3636-db01-4052-80c3-03bbcb8d3c69", L"IVdsServiceInitialization"},
    {L"4b324fc8-1670-01d3-1278-5a47bf6ee188", L"srvsvc"},
    {L"4bb8ab1d-9ef9-4100-8eb6-dd4b4e418b72", L"IADProxy"},
    {L"4bdafc52-fe6a-11d2-93f8-00105a11164a", L"IVolumeClient2"},
    {L"4c8f96c3-5d94-4f37-a4f4-f56ab463546f", L"IFsrmActionEventLog"},
    {L"4cbdcb2d-1589-4beb-bd1c-3e582ff0add0", L"IUpdateSearcher2"},
    {L"4d9f4ab8-7d1c-11cf-861e-0020af6e7c57", L"IActivation"},
    {L"4da1c422-943d-11d1-acae-00c04fc2aa3f", L"trksvr"},
    {L"4daa0135-e1d1-40f1-aaa5-3cc1e53221c3", L"IVdsVolumePlex"},
    {L"4dbcee9a-6343-4651-b85f-5e75d74d983c", L"IVdsVolumeMF2"},
    {L"4dfa1df3-8900-4bc7-bbb5-d1a458c52410", L"IAppHostConfigException"},
    {L"4e14fb9f-2e22-11d1-9964-00c04fbbb345", L"IEventSystem"},
    {L"4e6cdcc9-fb25-4fd5-9cc5-c9f4b6559cec", L"IComTrackingInfoEvents"},
    {L"4e934f30-341a-11d1-8fb1-00a024cb6019", L"INtmsLibraryControl1"},
    {L"4f7ca01c-a9e5-45b6-b142-2332a1339c1d", L"IWRMAccounting"},
    {L"4fc742e0-4a10-11cf-8273-00aa004ae673", L"netdfs"},
    {L"503626a3-8e14-4729-9355-0fe664bd2321", L"IUpdateExceptionCollection"},
    {L"50abc2a4-574d-40b3-9d66-ee4fd5fba076", L"DnsServer"},
    { L"515c1277-2c81-440e-8fcf-367921ed4f59", L"IFsrmPipelineModuleDefinition" },
    {L"5261574a-4572-206e-b268-6b199213b4e4", L"asyncemsmdb"},
    {L"52c80b95-c1ad-4240-8d89-72e9fa84025e", L"IClusCfgAsyncEvictCleanup"},
    {L"538684e0-ba3d-4bc0-aca9-164aff85c2a9", L"IVdsDiskPartitionMF"},
    {L"53b46b02-c73b-4a3e-8dee-b16b80672fc0", L"TSVIPPublic"},
    {L"541679ab-2e5f-11d3-b34e-00104bcc4b4a", L"IWbemLoginHelper"},
    {L"5422fd3a-d4b8-4cef-a12e-e87d4ca22e90", L"ICertRequestD2"},
    {L"54a2cb2d-9a0c-48b6-8a50-9abb69ee2d02", L"IUpdateDownloadContent"},
    {L"59602eb6-57b0-4fd8-aa4b-ebf06971fe15", L"IWRMPolicy"},
    {L"5a7b91f8-ff00-11d0-a9b2-00c04fb6e6fc", L"msgsvcsend"},
    { L"5b5a68e6-8b9f-45e1-8199-a95ffccdffff", L"IAppHostConstantValueCollection" },
    {L"5b821720-f63b-11d0-aad2-00c04fc324db", L"dhcpsrv2"},
    {L"5ca4a760-ebb1-11cf-8611-00a0245420ed", L"IcaApi"},
    {L"5f6325d3-ce88-4733-84c1-2d6aefc5ea07", L"IFsrmFileScreen"},
    {L"5ff9bdf6-bd91-4d8b-a614-d6317acc8dd8", L"IRemoteSstpCertCheck"},
    {L"6099fc12-3eff-11d0-abd0-00c04fd91a4e", L"faxclient"},
    {L"6139d8a4-e508-4ebb-bac7-d7f275145897", L"IRemoteIPV6Config"},
    {L"615c4269-7a48-43bd-96b7-bf6ca27d6c3e", L"IWindowsDriverUpdate2"},
    {L"64ff8ccc-b287-4dae-b08a-a72cbf45f453", L"IAppHostElement"},
    {L"6619a740-8154-43be-a186-0319578e02db", L"IRemoteDispatch"},
    {L"66a2db1b-d706-11d0-a37b-00c04fc9da04", L"IRemoteNetworkConfig"},
    {L"66a2db20-d706-11d0-a37b-00c04fc9da04", L"IRemoteRouterRestart"},
    {L"66a2db21-d706-11d0-a37b-00c04fc9da04", L"IRemoteSetDnsConfig"},
    {L"66a2db22-d706-11d0-a37b-00c04fc9da04", L"IRemoteICFICSConfig"},
    {L"673425bf-c082-4c7c-bdfd-569464b8e0ce", L"IAutomaticUpdates"},
    {L"6788faf9-214e-4b85-ba59-266953616e09", L"IVdsVolumeMF3"},
    {L"67e08fc2-2984-4b62-b92e-fc1aae64bbbb", L"IRemoteStringIdConfig"},
    {L"6879caf9-6617-4484-8719-71c3d8645f94", L"IFsrmReportScheduler"},
    {L"69ab7050-3059-11d1-8faf-00a024cb6019", L"INtmsObjectInfo1"},
    {L"6a92b07a-d821-4682-b423-5c805022cc4d", L"IUpdate"},
    {L"6b5bdd1e-528c-422c-af8c-a4079be4fe48", L"RemoteFW"},
    {L"6bffd098-a112-3610-9833-012892020162", L"browser"},
    {L"6bffd098-a112-3610-9833-46c3f874532d", L"dhcpsrv"},
    {L"6bffd098-a112-3610-9833-46c3f87e345a", L"wkssvc"},
    {L"6c935649-30a6-4211-8687-c4c83e5fe1c7", L"IContainerControl2"},
    {L"6cd6408a-ae60-463b-9ef1-e117534d69dc", L"IFsrmAction"},
    {L"6e6f6b40-977c-4069-bddd-ac710059f8c0", L"IVdsAdvancedDisk"},
    {L"6f4dbfff-6920-4821-a6c3-b7e94c1fd60c", L"IFsrmPathMapper"},
    {L"708cca10-9569-11d1-b2a5-0060977d8118", L"dscomm2"},
    {L"70b51430-b6ca-11d0-b9b9-00a0c922e750", L"IMSAdminBaseW"},
    {L"70cf5c82-8642-42bb-9dbc-0cfd263c6c4f", L"IWindowsDriverUpdate5"},
    {L"72ae6713-dcbb-4a03-b36b-371f6ac6b53d", L"IVdsVolume2"},
    {L"75c8f324-f715-4fe3-a28e-f9011b61a4a1", L"IVdsOpenVDisk"},
    {L"76b3b17e-aed6-4da5-85f0-83587f81abe3", L"IUpdateService"},
    {L"76d12b80-3467-11d3-91ff-0090272f9ea3", L"qmcomm2"},
    {L"76f03f96-cdfd-44fc-a22c-64950a001209", L"IRemoteWinspool"},
    {L"77df7a80-f298-11d0-8358-00a024c480a8", L"dscomm"},
    {L"784b693d-95f3-420b-8126-365c098659f2", L"IOCSPAdminD"},
    {L"7883ca1c-1112-4447-84c3-52fbeb38069d", L"IAppHostMethod"},
    {L"7c44d7d4-31d5-424c-bd5e-2b3e1f323d22", L"dsaop"},
    {L"7c4e1804-e342-483d-a43e-a850cfcc8d18", L"IIISApplicationAdmin"},
    {L"7c857801-7381-11cf-884d-00aa004b2e24", L"IWbemObjectSink"},
    {L"7c907864-346c-4aeb-8f3f-57da289f969f", L"IImageInformation"},
    {L"7d07f313-a53f-459a-bb12-012c15b1846e", L"IRobustNtmsMediaServices1"},
    {L"7f43b400-1a0e-4d57-bbc9-6b0c65f7a889", L"IAlternateLaunch"},
    {L"7fb7ea43-2d76-4ea8-8cd9-3decc270295e", L"IEventClass3"},
    {L"7fe0d935-dda6-443f-85d0-1cfb58fe41dd", L"ICertAdminD2"},
    {L"811109bf-a4e1-11d1-ab54-00a0c91e9b45", L"winsi2"},
    {L"8165b19e-8d3a-4d0b-80c8-97de310db583", L"IServicedComponentInfo"},
    {L"816858a4-260d-4260-933a-2585f1abc76b", L"IUpdateSession"},
    {L"81ddc1b8-9d35-47a6-b471-5b80f519223b", L"ICategory"},
    {L"82273fdc-e32a-18c3-3f78-827929dc23ea", L"eventlog"},
    {L"8276702f-2532-4839-89bf-4872609a2ea4", L"IFsrmActionEmail2"},
    {L"8298d101-f992-43b7-8eca-5052d885b995", L"IMSAdminBase2W"},
    {L"82ad4280-036b-11cf-972c-00aa006887b0", L"inetinfo"},
    {L"8326cd1d-cf59-4936-b786-5efc08798e25", L"IVdsAdviseSink"},
    { L"832a32f7-b3ea-4b8c-b260-9a2923001184", L"IAppHostConfigLocationCollection" },
    {L"833e4100-aff7-4ac3-aac2-9f24c1457bce", L"IPCHCollection"},
    {L"833e41aa-aff7-4ac3-aac2-9f24c1457bce", L"ISAFSession"},
    {L"83bfb87f-43fb-4903-baa6-127f01029eec", L"IVdsSubSystemImportTarget"},
    {L"85713fa1-7796-4fa2-be3b-e2d6124dd373", L"IWindowsUpdateAgentInfo"},
    {L"86d35949-83c9-4044-b424-db363231fd0c", L"ITaskSchedulerService"},
    {L"879c8bbe-41b0-11d1-be11-00c04fb6bf70", L"IClientSink"},
    {L"88143fd0-c28d-4b2b-8fef-8d882f6a9390", L"TermSrvEnumeration"},
    {L"88306bb2-e71f-478c-86a2-79da200a0f11", L"IVdsVolume"},
    {L"894de0c0-0d55-11d3-a322-00c04fa321a1", L"InitShutdown"},
    {L"895a2c86-270d-489d-a6c0-dc2a9b35280e", L"INtmsObjectManagement2"},
    {L"897e2e5f-93f3-4376-9c9c-fd2277495c27", L"FrsTransport"},
    {L"8bb68c7d-19d8-4ffb-809e-be4fc1734014", L"IFsrmQuotaManager"},
    { L"8bed2c68-a5fb-4b28-8581-a0dc5267419f", L"IAppHostPropertySchemaCollection" },
    {L"8db2180e-bd29-11d1-8b7e-00c04fd7a924", L"IRegister"},
    {L"8dd04909-0e34-4d55-afaa-89e1f1a1bbb9", L"IFsrmFileGroup"},
    {L"8f09f000-b7ed-11ce-bbd2-00001a181cad", L"dimsvc"},
    {L"8f45abf1-f9ae-4b95-a933-f0f66e5056ea", L"IUpdateSearcher"},
    {L"8f4b2f5d-ec15-4357-992f-473ef10975b9", L"IVdsDisk3"},
    {L"8f6d760f-f0cb-4d69-b5f6-848b33e9bdc6", L"IAppHostConfigManager"},
    {L"8fb6d884-2388-11d0-8c35-00c04fda2795", L"W32Time"},
    {L"90681b1d-6a7f-48e8-9061-31b7aa125322", L"IVdsDiskOnline"},
    {L"906b0ce0-c70b-1067-b317-00dd010662da", L"IXnRemote"},
    {L"918efd1e-b5d8-4c90-8540-aeb9bdc56f9d", L"IUpdateSession3"},
    {L"91ae6020-9e3c-11cf-8d7c-00aa00c091be", L"ICertPassage"},
    {L"91caf7b0-eb23-49ed-9937-c52d817f46f7", L"IUpdateSession2"},
    {L"943991a5-b3fe-41fa-9696-7f7b656ee34b", L"IWRMMachineGroup"},
    {L"9556dc99-828c-11cf-a37e-00aa003240c7", L"IWbemServices"},
    {L"96deb3b5-8b91-4a2a-9d93-80a35d8aa847", L"IFsrmCommittableCollection"},
    {L"971668dc-c3fe-4ea1-9643-0c7230f494a1", L"IRegister2"},
    {L"97199110-db2e-11d1-a251-0000f805ca53", L"ITransactionStream"},
    {L"9723f420-9355-42de-ab66-e31bb15beeac", L"IVdsAdvancedDisk2"},
    {L"98315903-7be5-11d2-adc1-00a02463d6e7", L"IReplicationUtil"},
    {L"9882f547-cfc3-420b-9750-00dfbec50662", L"IVdsCreatePartitionEx"},
    {L"99cc098f-a48a-4e9c-8e58-965c0afc19d5", L"IEventSystem2"},
    {L"99fcfec4-5260-101b-bbcb-00aa0021347a", L"IObjectExporter"},
    {L"9a2bf113-a329-44cc-809a-5c00fce8da40", L"IFsrmQuotaTemplateImported"},
    {L"9aa58360-ce33-4f92-b658-ed24b14425b8", L"IVdsSwProvider"},
    {L"9b0353aa-0e52-44ff-b8b0-1f7fa0437f88", L"IUpdateServiceCollection"},
    {L"9be77978-73ed-4a9a-87fd-13f09fec1b13", L"IAppHostAdminManager"},
    {L"9cbe50ca-f2d2-4bf4-ace1-96896b729625", L"IVdsDiskPartitionMF2"},
    { L"9d07ca0d-8f02-4ed5-b727-acf37fea5bbc", L"ISingleSignonRemoteMasterSecret" },
    {L"a0e8f27a-888c-11d1-b763-00c04fb926af", L"IEventSystemInitialize"},
    {L"a2efab31-295e-46bb-b976-e86d58b52e8b", L"IFsrmQuotaTemplate"},
    {L"a359dec5-e813-4834-8a2a-ba7f1d777d76", L"IWbemBackupRestoreEx"},
    {L"a35af600-9cf4-11cd-a076-08002b2bd711", L"type_scard_pack"},
    {L"a376dd5e-09d4-427f-af7c-fed5b6e1c1d6", L"IUpdateException"},
    {L"a4f1db00-ca47-1067-b31f-00dd010662da", L"emsmdb"},
    { L"a7f04f3c-a290-435b-aadf-a116c3357a5c", L"IUpdateHistoryEntryCollection" },
    {L"a8927a41-d3ce-11d1-8472-006008b0e5ca", L"ICatalogTableInfo"},
    {L"a8e0653c-2744-4389-a61d-7373df8b2292", L"FileServerVssAgent"},
    {L"ad55f10b-5f11-4be7-94ef-d9ee2e470ded", L"IFsrmFileGroupImported"},
    {L"ada4e6fb-e025-401e-a5d0-c3134a281f07", L"IAppHostConfigFile"},
    {L"ae1c7110-2f60-11d3-8a39-00c04f72d8e3", L"IVssEnumObject"},
    {L"afa8bd80-7d8a-11c9-bef4-08002b102989", L"mgmt"},
    {L"afc052c2-5315-45ab-841b-c6db0e120148", L"IFsrmClassificationRule"},
    {L"afc07e2e-311c-4435-808c-c483ffeec7c9", L"lsacap"},
    {L"b057dc50-3059-11d1-8faf-00a024cb6019", L"INtmsObjectManagement1"},
    {L"b07fedd4-1682-4440-9189-a39b55194dc5", L"IVdsIscsiInitiatorAdapter"},
    {L"b196b284-bab4-101a-b69c-00aa00341d07", L"IConnectionPointContainer"},
    {L"b196b285-bab4-101a-b69c-00aa00341d07", L"IEnumConnectionPoints"},
    {L"b196b286-bab4-101a-b69c-00aa00341d07", L"IConnectionPoint"},
    {L"b196b287-bab4-101a-b69c-00aa00341d07", L"IEnumConnections"},
    {L"b383cd1a-5ce9-4504-9f63-764b1236f191", L"IWindowsDriverUpdate"},
    {L"b481498c-8354-45f9-84a0-0bdd2832a91f", L"IVdsVdProvider"},
    { L"b60040e0-bcf3-11d1-861d-0080c729264d", L"IGetTrackingData" },
    { L"b6b22da8-f903-4be7-b492-c09d875ac9da", L"IVdsServiceUninstallDisk" },
    { L"b7d381ee-8860-47a1-8af4-1f33b2b1f325", L"IAppHostSectionDefinitionCollection"},
    {L"b80f3c42-60e0-4ae0-9007-f52852d3dbed", L"IAppHostMethodInstance"},
    {L"b9785960-524f-11df-8b6d-83dcded72085", L"ISDKey"},
    {L"b97db8b2-4c63-11cf-bff6-08002be23f2f", L"clusapi"},
    {L"b97db8b2-4c63-11cf-bff6-08002be23f2f", L"clusapi"},
    { L"bb36ea26-6318-4b8c-8592-f72dd602e7a5", L"IFsrmClassifierModuleDefinition" },
    {L"bb39332c-bfee-4380-ad8a-badc8aff5bb6", L"INtmsNotifySink"},
    {L"bba9cb76-eb0c-462c-aa1b-5d8c34415701", L"Claims"},
    { L"bc5513c8-b3b8-4bf7-a4d4-361c0d8c88ba", L"IUpdateDownloadContentCollection" },
    {L"bc681469-9dd9-4bf4-9b3d-709f69efe431", L"IWRMResourceGroup"},
    {L"bd0c73bc-805b-4043-9c30-9a28d64dd7d2", L"IIISCertObj"},
    {L"bd7c23c2-c805-457c-8f86-d17fe6b9d19f", L"IClusterLogEx"},
    {L"bde95fdf-eee0-45de-9e12-e5a61cd0d4fe", L"RCMPublic"},
    {L"be56a644-af0e-4e0e-a311-c1d8e695cbff", L"IUpdateHistoryEntry"},
    {L"bee7ce02-df77-4515-9389-78f01c5afc1a", L"IFsrmFileScreenException"},
    {L"c1c2f21a-d2f4-4902-b5c6-8a081c19a890", L"IUpdate5"},
    {L"c2be6970-df9e-11d1-8b87-00c04fd7a924", L"IImport"},
    {L"c2bfb780-4539-4132-ab8c-0a8772013ab6", L"IUpdateHistoryEntry2"},
    {L"c3fcc19e-a970-11d2-8b5a-00a0c9b7c9c4", L"IManagedObject"},
    {L"c49e32c7-bc8b-11d2-85d4-00105a1f8304", L"IWbemBackupRestore"},
    {L"c4b0c7d9-abe0-4733-a1e1-9fdedf260c7a", L"IADProxy2"},
    {L"c5c04795-321c-4014-8fd6-d44658799393", L"IAppHostSectionDefinition"},
    {L"c5cebee2-9df5-4cdd-a08c-c2471bc144b4", L"IResourceManager"},
    {L"c681d488-d850-11d0-8c52-00c04fd90f7e", L"efsrpc"},
    {L"c726744e-5735-4f08-8286-c510ee638fb6", L"ICatalogUtils2"},
    {L"c8550bff-5281-4b1e-ac34-99b6fa38464d", L"IAppHostElementCollection"},
    {L"c97ad11b-f257-420b-9d9f-377f733f6f68", L"IUpdateDownloadContent2"},
    {L"cb0df960-16f5-4495-9079-3f9360d831df", L"IFsrmRule"},
    {L"ccd8c074-d0e5-4a40-92b4-d074faa6ba28", L"Witness"},
    {L"cfadac84-e12c-11d1-b34c-00c04f990d54", L"IExport"},
    {L"cfe36cba-1949-4e74-a14f-f1d580ceaf13", L"IFsrmFileScreenTemplateManager"},
    {L"d02e4be0-3419-11d1-8fb1-00a024cb6019", L"INtmsMediaServices1"},
    {L"d049b186-814f-11d1-9a3c-00c04fc9b232", L"NtFrsApi"},
    {L"d2d79df5-3400-11d0-b40b-00aa005ff586", L"IVolumeClient"},
    {L"d2d79df7-3400-11d0-b40b-00aa005ff586", L"IDMNotify"},
    {L"d2dc89da-ee91-48a0-85d8-cc72a56f7d04", L"IFsrmClassificationManager"},
    {L"d40cff62-e08c-4498-941a-01e25f0fd33c", L"ISearchResult"},
    {L"d4781cd6-e5d3-44df-ad94-930efe48a887", L"IWbemLoginClientID"},
    {L"d5d23b6d-5a55-4492-9889-397a3c2d2dbc", L"IVdsAsync"},
    {L"d646567d-26ae-4caa-9f84-4e0aad207fca", L"IFsrmActionEmail"},
    {L"d68168c9-82a2-4f85-b6e9-74707c49a58f", L"IVdsVolumeShrink"},
    {L"d6c7cd8f-bb8d-4f96-b591-d3a5f1320269", L"IAppHostMethodCollection"},
    {L"d8cc81d9-46b8-4fa4-bfa5-4aa9dec9b638", L"IFsrmReport"},
    {L"d95afe70-a6d5-4259-822e-2c84da1ddb0d", L"WindowsShutdown"},
    {L"d99bdaae-b13a-4178-9fdb-e27f16b4603e", L"IVdsHwProvider"},
    {L"d99e6e70-fc88-11d0-b498-00a0c90312f3", L"ICertRequestD"},
    {L"d99e6e71-fc88-11d0-b498-00a0c90312f3", L"ICertAdminD"},
    {L"d9a59339-e245-4dbd-9686-4d5763e39624", L"IInstallationBehavior"},
    {L"da5a86c5-12c2-4943-ab30-7f74a813d853", L"PerflibV2"},
    {L"db90832f-6910-4d46-9f5e-9fd6bfa73903", L"INtmsLibraryControl2"},
    {L"dc12a681-737f-11cf-884d-00aa004b2e24", L"IWbemClassObject"},
    {L"dde02280-12b3-4e0b-937b-6747f6acb286", L"IUpdateServiceRegistration"},
    {L"de095db1-5368-4d11-81f6-efef619b7bcf", L"IAppHostCollectionSchema"},
    {L"deb01010-3a37-4d26-99df-e2bb6ae3ac61", L"IVolumeClient4"},
    {L"e0393303-90d4-4a97-ab71-e9b671ee2729", L"IVdsServiceLoader"},
    {L"e1010359-3e5d-4ecd-9fe4-ef48622fdf30", L"IFsrmFileScreenTemplateImported"},
    {L"e1af8308-5d1f-11c9-91a4-08002b14a0fa", L"ept"},
    {L"e33c0cc4-0482-101a-bc0c-02608c6ba218", L"LocToLoc"},
    {L"e3514235-4b06-11d1-ab04-00c04fc2dcd2", L"drsuapi"},
    {L"e3d0d746-d2af-40fd-8a7a-0d7078bb7092", L"BitsPeerAuth"},
    {L"e65e8028-83e8-491b-9af7-aaf6bd51a0ce", L"IServerHealthReport"},
    {L"e7927575-5cc3-403b-822e-328a6b904bee", L"IAppHostPathMapper"},
    {L"e7a4d634-7942-4dd9-a111-82228ba33901", L"IAutomaticUpdatesResults"},
    {L"e8fb8620-588f-11d2-9d61-00c04f79c5fe", L"IIisServiceControl"},
    {L"e946d148-bd67-4178-8e22-1c44925ed710", L"IFsrmPropertyDefinitionValue"},
    {L"ea0a3165-4834-11d2-a6f8-00c04fa346cc", L"fax"},
    {L"eafe4895-a929-41ea-b14d-613e23f62b71", L"IAppHostPropertyException"},
    {L"ed35f7a1-5024-4e7b-a44d-07ddaf4b524d", L"IAppHostProperty"},
    {L"ed8bfe40-a60b-42ea-9652-817dfcfa23ec", L"IWindowsDriverUpdateEntry"},
    {L"ede0150f-e9a3-419c-877c-01fe5d24c5d3", L"IFsrmPropertyDefinition"},
    {L"ee2d5ded-6236-4169-931d-b9778ce03dc6", L"IVdsVolumeMF"},
    {L"ee321ecb-d95e-48e9-907c-c7685a013235", L"IFsrmFileManagementJobManager"},
    {L"ef13d885-642c-4709-99ec-b89561c6bc69", L"IAppHostElementSchema"},
    {L"eff90582-2ddc-480f-a06d-60f3fbc362c3", L"IStringCollection"},
    {L"f131ea3e-b7be-480e-a60d-51cb2785779e", L"IExport2"},
    {L"f1e9c5b2-f59b-11d2-b362-00105a1f8177", L"IWbemRemoteRefresher"},
    {L"f309ad18-d86a-11d0-a075-00c04fb68820", L"IWbemLevel1Login"},
    {L"f31931a9-832d-481c-9503-887a0e6a79f0", L"IWRMProtocol"},
    {L"f3637e80-5b22-4a2b-a637-bbb642b41cfc", L"IFsrmFileScreenBase"},
    {L"f411d4fd-14be-4260-8c40-03b7c95e608a", L"IFsrmSetting"},
    {L"f4a07d63-2e25-11d1-9964-00c04fbbb345", L"IEnumEventObject"},
    {L"f5cc59b4-4264-101a-8c59-08002b2f8426", L"frsrpc"},
    {L"f5cc5a18-4264-101a-8c59-08002b2f8426", L"nspi"},
    {L"f612954d-3b0b-4c56-9563-227b7be624b4", L"IMSAdminBase3W"},
    {L"f6beaff7-1e19-4fbb-9f8f-b89e2018337c", L"IEventService"},
    {L"f76fbf3b-8ddd-4b42-b05a-cb1c3ff1fee8", L"IFsrmCollection"},
    {L"f82e5729-6aba-4740-bfc7-c7f58f75fb7b", L"IFsrmAutoApplyQuota"},
    {L"f89ac270-d4eb-11d1-b682-00805fc79216", L"IEventObjectCollection"},
    {L"fa7660f6-7b3f-4237-a8bf-ed0ad0dcbbd9", L"IAppHostWritableAdminManager"},
    {L"fa7df749-66e7-4986-a27f-e2f04ae53772", L"IVssSnapshotMgmt"},
    {L"fb2b72a0-7a68-11d1-88f9-0080c7d771bf", L"IEventClass"},
    {L"fb2b72a1-7a68-11d1-88f9-0080c7d771bf", L"IEventClass2"},
    {L"fbc1d17d-c498-43a0-81af-423ddd530af6", L"IEventSubscription3"},
    {L"fc5d23e8-a88b-41a5-8de0-2d2f73c5a630", L"IVdsServiceSAN"},
    {L"fc910418-55ca-45ef-b264-83d4ce7d30e0", L"IWRMRemoteSessionMgmt"},
    {L"fdb3a030-065f-11d1-bb9b-00a024ea5525", L"qmcomm"},
    {L"ff4fa04e-5a94-4bda-a3a0-d5b4d3c52eba", L"IFsrmFileScreenManager"}
};


std::map<int,std::wstring> atsvcOpnums = {
        {0, L"NetrJobAdd"},
        {1, L"NetrJobDel"},
        {2, L"NetrJobEnum"},
        {3, L"NetrJobGetInfo"}
    };

std::map<int,std::wstring> sasecOpnums = {
        {0, L"SASetAccountInformation"},
        {1, L"SASetNSAccountInformation"},
        {2, L"SAGetNSAccountInformation"},
        {3, L"SAGetAccountInformation"}
    };

std::map<int,std::wstring> idletaskOpnums = {
        {0, L"ItSrvRegisterIdleTask"},
        {1, L"ItSrvUnregisterIdleTask"},
        {2, L"ItSrvProcessIdleTasks"},
        {3, L"ItSrvSetDetectionParameters"}
    };

std::map<int,std::wstring> ITaskSchedulerServiceOpnums = {
        {0, L"SchRpcHighestVersion"},
        {1, L"SchRpcRegisterTask"},
        {2, L"SchRpcRetrieveTask"},
        {3, L"SchRpcCreateFolder"},
        {4, L"SchRpcSetSecurity"},
        {5, L"SchRpcGetSecurity"},
        {6, L"SchRpcEnumFolder"},
        {7, L"SchRpcEnumTasks"},
        {8, L"SchRpcEnumInstances"},
        {9, L"SchRpcGetInstanceInfo"},
        {10, L"SchRpcStopInstance"},
        {11, L"SchRpcStop"},
        {12, L"SchRpcRun"},
        {13, L"SchRpcDelete"},
        {14, L"SchRpcRename"},
        {15, L"SchRpcScheduledRuntimes"},
        {16, L"SchRpcGetLastRunInfo"},
        {17, L"SchRpcGetTaskInfo"},
        {18, L"SchRpcGetNumberOfMissedRuns"},
        {19, L"SchRpcEnableTask"}
    };

std::map<int,std::wstring> IObjectExporterOpnums = {
        {0, L"ResolveOxid"},
        {1, L"SimplePing"},
        {2, L"ComplexPing"},
        {3, L"ServerAlive"},
        {4, L"ResolveOxid2"},
        {5, L"ServerAlive2"}
    };

std::map<int,std::wstring> IActivationOpnums = {
        {0, L"RemoteActivation"}
    };

std::map<int,std::wstring> nspiOpnums = {
        {0, L"NspiBind"},
        {1, L"NspiUnbind"},
        {2, L"NspiUpdateStat"},
        {3, L"NspiQueryRows"},
        {4, L"NspiSeekEntries"},
        {5, L"NspiGetMatches"},
        {6, L"NspiResortRestriction"},
        {7, L"NspiDNToEph"},
        {8, L"NspiGetPropList"},
        {9, L"NspiGetProps"},
        {10, L"NspiCompareMIds"},
        {11, L"NspiModProps"},
        {12, L"NspiGetSpecialTable"},
        {13, L"NspiGetTemplateInfo"},
        {14, L"NspiModLinkAtt"},
        {16, L"NspiQueryColumns"},
        {17, L"NspiGetNamesFromIDs"},
        {18, L"NspiGetIDsFromNames"},
        {19, L"NspiResolveNames"},
        {20, L"NspiResolveNamesW"}
    };

std::map<int,std::wstring> IWbemServicesOpnums = {
        {3, L"OpenNamespace"},
        {4, L"CancelAsyncCall"},
        {5, L"QueryObjectSink"},
        {6, L"GetObject"},
        {7, L"GetObjectAsync"},
        {8, L"PutClass"},
        {9, L"PutClassAsync"},
        {10, L"DeleteClass"},
        {11, L"DeleteClassAsync"},
        {12, L"CreateClassEnum"},
        {13, L"CreateClassEnumAsync"},
        {14, L"PutInstance"},
        {15, L"PutInstanceAsync"},
        {16, L"DeleteClass"},
        {17, L"DeleteClassAsync"},
        {18, L"CreateInstanceEnum"},
        {19, L"CreateInstanceEnumAsync"},
        {20, L"ExecQuery"},
        {21, L"ExecQueryAsync"},
        {22, L"ExecNotificationQuery"},
        {23, L"ExecNotificationQueryAsync"},
        {24, L"ExecMethod"},
        {25, L"ExecMethodAsync"}
    };

std::map<int,std::wstring> IWbemLevel1LoginOpnums = {
        {3, L"EstablishPosition"},
        {4, L"RequestChallenge"},
        {5, L"WBEMLogin"},
        {6, L"NTLMLogin"}
    };

std::map<int,std::wstring> FrsRpcOpnums = {
        {0, L"FrsRpcSendCommPkt"},
        {1, L"FrsRpcVerifyPromotionParent"},
        {2, L"FrsRpcStartPromotionParent"},
        {3, L"FrsNOP"},
        {4, L"FrsBackupComplete"},
        {5, L"FrsBackupComplete"},
        {6, L"FrsBackupComplete"},
        {7, L"FrsBackupComplete"},
        {8, L"FrsBackupComplete"},
        {9, L"FrsBackupComplete"},
        {10, L"FrsRpcVerifyPromotionParentEx"}
    };

std::map<int,std::wstring> IRemUnknown2Opnums = {
        {0, L"QueryInterface"},
        {1, L"AddRef"},
        {2, L"Release"},
        {3, L"RemQueryInterface"},
        {4, L"RemAddRef"},
        {5, L"RemRelease"},
        {6, L"RemQueryInterface2"}
    };

std::map<int,std::wstring> IRemoteSCMActivatorOpnums = {
        {0, L"QueryInterfaceIRemoteSCMActivator"},
        {1, L"AddRefIRemoteISCMActivator"},
        {2, L"ReleaseIRemoteISCMActivator"},
        {3, L"RemoteGetClassObject"},
        {4, L"RemoteCreateInstance"}
    };

std::map<int,std::wstring> netlogonOpnums = {
        {0, L"NetrLogonUasLogon"},
        {1, L"NetrLogonUasLogoff"},
        {2, L"NetrLogonSamLogon"},
        {3, L"NetrLogonSamLogoff"},
        {4, L"NetrServerReqChallenge"},
        {5, L"NetrServerAuthenticate"},
        {6, L"NetrServerPasswordSet"},
        {7, L"NetrDatabaseDeltas"},
        {8, L"NetrDatabaseSync"},
        {9, L"NetrAccountDeltas"},
        {10, L"NetrAccountSync"},
        {11, L"NetrGetDCName"},
        {12, L"NetrLogonControl"},
        {13, L"NetrGetAnyDCName"},
        {14, L"NetrLogonControl2"},
        {15, L"NetrServerAuthenticate2"},
        {16, L"NetrDatabaseSync2"},
        {17, L"NetrDatabaseRedo"},
        {18, L"NetrLogonControl2Ex"},
        {19, L"NetrEnumerateTrustedDomains"},
        {20, L"DsrGetDcName"},
        {21, L"NetrLogonGetCapabilities"},
        {22, L"NetrLogonSetServiceBits"},
        {23, L"NetrLogonGetTrustRid"},
        {24, L"NetrLogonComputeServerDigest"},
        {25, L"NetrLogonComputeClientDigest"},
        {26, L"NetrServerAuthenticate3"},
        {27, L"DsrGetDcNameEx"},
        {28, L"DsrGetSiteName"},
        {29, L"NetrLogonGetDomainInfo"},
        {30, L"NetrServerPasswordSet2"},
        {31, L"NetrServerPasswordGet"},
        {32, L"NetrLogonSendToSam"},
        {33, L"DsrAddressToSiteNamesW"},
        {34, L"DsrGetDcNameEx2"},
        {35, L"NetrLogonGetTimeServiceParentDomain"},
        {36, L"NetrEnumerateTrustedDomainsEx"},
        {37, L"DsrAddressToSiteNamesExW"},
        {38, L"DsrGetDcSiteCoverageW"},
        {39, L"NetrLogonSamLogonEx"},
        {40, L"DsrEnumerateDomainTrusts"},
        {41, L"DsrDeregisterDnsHostRecords"},
        {42, L"NetrServerTrustPasswordsGet"},
        {43, L"DsrGetForestTrustInformation"},
        {44, L"NetrGetForestTrustInformation"},
        {45, L"NetrLogonSamLogonWithFlags"},
        {46, L"NetrServerGetTrustInfo"},
        {47, L"unused"},
        {48, L"DsrUpdateReadOnlyServerDnsRecords"},
        {49, L"NetrChainSetClientAttributes"}
    };

std::map<int,std::wstring> IRemoteWinspoolOpnums = {
        {0, L"RpcAsyncOpenPrinter"},
        {1, L"RpcAsyncAddPrinter"},
        {2, L"RpcAsyncSetJob"},
        {3, L"RpcAsyncGetJob"},
        {4, L"RpcAsyncEnumJobs"},
        {5, L"RpcAsyncAddJob"},
        {6, L"RpcAsyncScheduleJob"},
        {7, L"RpcAsyncDeletePrinter"},
        {8, L"RpcAsyncSetPrinter"},
        {9, L"RpcAsyncGetPrinter"},
        {10, L"RpcAsyncStartDocPrinter"},
        {11, L"RpcAsyncStartPagePrinter"},
        {12, L"RpcAsyncWritePrinter"},
        {13, L"RpcAsyncEndPagePrinter"},
        {14, L"RpcAsyncEndDocPrinter"},
        {15, L"RpcAsyncAbortPrinter"},
        {16, L"RpcAsyncGetPrinterData"},
        {17, L"RpcAsyncGetPrinterDataEx"},
        {18, L"RpcAsyncSetPrinterData"},
        {19, L"RpcAsyncSetPrinterDataEx"},
        {20, L"RpcAsyncClosePrinter"},
        {21, L"RpcAsyncAddForm"},
        {22, L"RpcAsyncDeleteForm"},
        {23, L"RpcAsyncGetForm"},
        {24, L"RpcAsyncSetForm"},
        {25, L"RpcAsyncEnumForms"},
        {26, L"RpcAsyncGetPrinterDriver"},
        {27, L"RpcAsyncEnumPrinterData"},
        {28, L"RpcAsyncEnumPrinterDataEx"},
        {29, L"RpcAsyncEnumPrinterKey"},
        {30, L"RpcAsyncDeletePrinterData"},
        {31, L"RpcAsyncDeletePrinterDataEx"},
        {32, L"RpcAsyncDeletePrinterKey"},
        {33, L"RpcAsyncXcvData"},
        {34, L"RpcAsyncSendRecvBidiData"},
        {35, L"RpcAsyncCreatePrinterIC"},
        {36, L"RpcAsyncPlayGdiScriptOnPrinterIC"},
        {37, L"RpcAsyncDeletePrinterIC"},
        {38, L"RpcAsyncEnumPrinters"},
        {39, L"RpcAsyncAddPrinterDriver"},
        {40, L"RpcAsyncEnumPrinterDrivers"},
        {41, L"RpcAsyncGetPrinterDriverDirectory"},
        {42, L"RpcAsyncDeletePrinterDriver"},
        {43, L"RpcAsyncDeletePrinterDriverEx"},
        {44, L"RpcAsyncAddPrintProcessor"},
        {45, L"RpcAsyncEnumPrintProcessors"},
        {46, L"RpcAsyncGetPrintProcessorDirectory"},
        {47, L"RpcAsyncEnumPorts"},
        {48, L"RpcAsyncEnumMonitors"},
        {49, L"RpcAsyncAddPort"},
        {50, L"RpcAsyncSetPort"},
        {51, L"RpcAsyncAddMonitor"},
        {52, L"RpcAsyncDeleteMonitor"},
        {53, L"RpcAsyncDeletePrintProcessor"},
        {54, L"RpcAsyncEnumPrintProcessorDatatypes"},
        {55, L"RpcAsyncAddPerMachineConnection"},
        {56, L"RpcAsyncDeletePerMachineConnection"},
        {57, L"RpcAsyncEnumPerMachineConnections"},
        {58, L"RpcSyncRegisterForRemoteNotifications"},
        {59, L"RpcSyncUnRegisterForRemoteNotifications"},
        {60, L"RpcSyncRefreshRemoteNotifications"},
        {61, L"RpcAsyncGetRemoteNotifications"},
        {62, L"RpcAsyncInstallPrinterDriverFromPackage"},
        {63, L"RpcAsyncUploadPrinterDriverPackage"},
        {64, L"RpcAsyncGetCorePrinterDrivers"},
        {65, L"RpcAsyncCorePrinterDriverInstalled"},
        {66, L"RpcAsyncGetPrinterDriverPackagePath"},
        {67, L"RpcAsyncDeletePrinterDriverPackage"},
        {68, L"RpcAsyncReadPrinter"},
        {69, L"RpcAsyncResetPrinter"},
        {70, L"RpcAsyncGetJobNamedPropertyValue"},
        {71, L"RpcAsyncSetJobNamedProperty"},
        {72, L"RpcAsyncDeleteJobNamedProperty"},
        {73, L"RpcAsyncEnumJobNamedProperties"},
        {74, L"RpcAsyncLogJobInfoForBranchOffice"}
    };

std::map<int,std::wstring> InitShutdownOpnums = {
        {0, L"BaseInitiateShutdown"},
        {1, L"BaseAbortShutdown"},
        {2, L"BaseInitiateShutdownEx"}
    };

std::map<int,std::wstring> WindowsShutdownOpnums = {
        {0, L"WsdrInitiateShutdown"},
        {1, L"WsdrAbortShutdown"}
    };

std::map<int,std::wstring> spoolssOpnums = {
        {0, L"RpcEnumPrinters"},
        {1, L"RpcOpenPrinter"},
        {2, L"RpcSetJob"},
        {3, L"RpcGetJob"},
        {4, L"RpcEnumJobs"},
        {5, L"RpcAddPrinter"},
        {6, L"RpcDeletePrinter"},
        {7, L"RpcSetPrinter"},
        {8, L"RpcGetPrinter"},
        {9, L"RpcAddPrinterDriver"},
        {10, L"RpcEnumPrinterDrivers"},
        {11, L"RpcGetPrinterDriver"},
        {12, L"RpcGetPrinterDriverDirectory"},
        {13, L"RpcDeletePrinterDriver"},
        {14, L"RpcAddPrintProcessor"},
        {15, L"RpcEnumPrintProcessors"},
        {16, L"RpcGetPrintProcessorDirectory"},
        {17, L"RpcStartDocPrinter"},
        {18, L"RpcStartPagePrinter"},
        {19, L"RpcWritePrinter"},
        {20, L"RpcEndPagePrinter"},
        {21, L"RpcAbortPrinter"},
        {22, L"RpcReadPrinter"},
        {23, L"RpcEndDocPrinter"},
        {24, L"RpcAddJob"},
        {25, L"RpcScheduleJob"},
        {26, L"RpcGetPrinterData"},
        {27, L"RpcSetPrinterData"},
        {28, L"RpcWaitForPrinterChange"},
        {29, L"RpcClosePrinter"},
        {30, L"RpcAddForm"},
        {31, L"RpcDeleteForm"},
        {32, L"RpcGetForm"},
        {33, L"RpcSetForm"},
        {34, L"RpcEnumForms"},
        {35, L"RpcEnumPorts"},
        {36, L"RpcEnumMonitors"},
        {37, L"RpcAddPort"},
        {38, L"RpcConfigurePort"},
        {39, L"RpcDeletePort"},
        {40, L"RpcCreatePrinterIC"},
        {41, L"RpcPlayGdiScriptOnPrinterIC"},
        {42, L"RpcDeletePrinterIC"},
        {43, L"RpcAddPrinterConnection"},
        {44, L"RpcDeletePrinterConnection"},
        {45, L"RpcPrinterMessageBox"},
        {46, L"RpcAddMonitor"},
        {47, L"RpcDeleteMonitor"},
        {48, L"RpcDeletePrintProcessor"},
        {49, L"RpcAddPrintProvidor"},
        {50, L"RpcDeletePrintProvidor"},
        {51, L"RpcEnumPrintProcessorDatatypes"},
        {52, L"RpcResetPrinter"},
        {53, L"RpcGetPrinterDriver2"},
        {54, L"RpcClientFindFirstPrinterChangeNotification"},
        {55, L"RpcFindNextPrinterChangeNotification"},
        {56, L"RpcFindClosePrinterChangeNotification"},
        {57, L"RpcRouterFindFirstPrinterChangeNotificationOld"},
        {58, L"RpcReplyOpenPrinter"},
        {59, L"RpcRouterReplyPrinter"},
        {60, L"RpcReplyClosePrinter"},
        {61, L"RpcAddPortEx"},
        {62, L"RpcRemoteFindFirstPrinterChangeNotification"},
        {63, L"RpcSpoolerInit"},
        {64, L"RpcResetPrinterEx"},
        {65, L"RpcRemoteFindFirstPrinterChangeNotificationEx"},
        {66, L"RpcRouterReplyPrinterEx"},
        {67, L"RpcRouterRefreshPrinterChangeNotification"},
        {68, L"RpcSetAllocFailCount"},
        {69, L"RpcSplOpenPrinter"},
        {70, L"RpcAddPrinterEx"},
        {71, L"RpcSetPort"},
        {72, L"RpcEnumPrinterData"},
        {73, L"RpcDeletePrinterData"},
        {74, L"RpcClusterSplOpen"},
        {75, L"RpcClusterSplClose"},
        {76, L"RpcClusterSplIsAlive"},
        {77, L"RpcSetPrinterDataEx"},
        {78, L"RpcGetPrinterDataEx"},
        {79, L"RpcEnumPrinterDataEx"},
        {80, L"RpcEnumPrinterKey"},
        {81, L"RpcDeletePrinterDataEx"},
        {82, L"RpcDeletePrinterKey"},
        {83, L"RpcSeekPrinter"},
        {84, L"RpcDeletePrinterDriverEx"},
        {85, L"RpcAddPerMachineConnection"},
        {86, L"RpcDeletePerMachineConnection"},
        {87, L"RpcEnumPerMachineConnections"},
        {88, L"RpcXcvData"},
        {89, L"RpcAddPrinterDriverEx"},
        {90, L"RpcSplOpenPrinter"},
        {91, L"RpcGetSpoolFileInfo"},
        {92, L"RpcCommitSpoolData"},
        {93, L"RpcCloseSpoolFileHandle"},
        {94, L"RpcFlushPrinter"},
        {95, L"RpcSendRecvBidiData"},
        {96, L"RpcAddDriverCatalog"},
        {97, L"RpcAddPrinterConnection2"},
        {98, L"RpcDeletePrinterConnection2"},
        {99, L"RpcInstallPrinterDriverFromPackage"},
        {100, L"RpcUploadPrinterDriverPackage"},
        {101, L"RpcGetCorePrinterDrivers"},
        {102, L"RpcCorePrinterDriverInstalled"},
        {103, L"RpcGetPrinterDriverPackagePath"},
        {104, L"RpcReportJobProcessingProgress"},
        {110, L"RpcGetJobNamedPropertyValue"},
        {111, L"RpcSetJobNamedProperty"},
        {112, L"RpcDeleteJobNamedProperty"},
        {113, L"RpcEnumJobNamedProperties"},
        {116, L"RpcLogJobInfoForBranchOffice"}
    };

std::map<int,std::wstring> srvsvcOpnums = {
        {0, L"NetrCharDevEnum"},
        {1, L"NetrCharDevGetInfo"},
        {2, L"NetrCharDevControl"},
        {3, L"NetrCharDevQEnum"},
        {4, L"NetrCharDevQGetInfo"},
        {5, L"NetrCharDevQSetInfo"},
        {6, L"NetrCharDevQPurge"},
        {7, L"NetrCharDevQPurgeSelf"},
        {8, L"NetrConnectionEnum"},
        {9, L"NetrFileEnum"},
        {10, L"NetrFileGetInfo"},
        {11, L"NetrFileClose"},
        {12, L"NetrSessionEnum"},
        {13, L"NetrSessionDel"},
        {14, L"NetrShareAdd"},
        {15, L"NetrShareEnum"},
        {16, L"NetrShareGetInfo"},
        {17, L"NetrShareSetInfo"},
        {18, L"NetrShareDel"},
        {19, L"NetrShareDelSticky"},
        {20, L"NetrShareCheck"},
        {21, L"NetrServerGetInfo"},
        {22, L"NetrServerSetInfo"},
        {23, L"NetrServerDiskEnum"},
        {24, L"NetrServerStatisticsGet"},
        {25, L"NetrServerTransportAdd"},
        {26, L"NetrServerTransportEnum"},
        {27, L"NetrServerTransportDel"},
        {28, L"NetrRemoteTOD"},
        {29, L"NetrServerSetServiceBits"},
        {30, L"NetprPathType"},
        {31, L"NetprPathCanonicalize"},
        {32, L"NetprPathCompare"},
        {33, L"NetprNameValidate"},
        {34, L"NetprNameCanonicalize"},
        {35, L"NetprNameCompare"},
        {36, L"NetrShareEnumSticky"},
        {37, L"NetrShareDelStart"},
        {38, L"NetrShareDelCommit"},
        {39, L"NetrpGetFileSecurity"},
        {40, L"NetrpSetFileSecurity"},
        {41, L"NetrServerTransportAddEx"},
        {42, L"NetrServerSetServiceBitsEx"},
        {43, L"NetrDfsGetVersion"},
        {44, L"NetrDfsCreateLocalPartition"},
        {45, L"NetrDfsDeleteLocalPartition"},
        {46, L"NetrDfsSetLocalVolumeState"},
        {47, L"NetrDfsSetServerInfo"},
        {48, L"NetrDfsCreateExitPoint"},
        {49, L"NetrDfsDeleteExitPoint"},
        {50, L"NetrDfsModifyPrefix"},
        {51, L"NetrDfsFixLocalVolume"},
        {52, L"NetrDfsManagerReportSiteInfo"},
        {53, L"NetrServerTransportDelEx"},
        {55, L"NetrServerAliasEnum"},
        {56, L"NetrServerAliasDel"},
        {57, L"NetrShareDelEx"}
    };

std::map<int,std::wstring> samrOpnums = {
        {0, L"SamrConnect"},
        {1, L"SamrCloseHandle"},
        {2, L"SamrSetSecurityObject"},
        {3, L"SamrQuerySecurityObject"},
        {4, L"SamrShutdownSamServer"},
        {5, L"SamrLookupDomainInSamServer"},
        {6, L"SamrEnumerateDomainsInSamServer"},
        {7, L"SamrOpenDomain"},
        {8, L"SamrQueryInformationDomain"},
        {9, L"SamrSetInformationDomain"},
        {10, L"SamrCreateGroupInDomain"},
        {11, L"SamrEnumerateGroupsInDomain"},
        {12, L"SamrCreateUserInDomain"},
        {13, L"SamrEnumerateUsersInDomain"},
        {14, L"SamrCreateAliasInDomain"},
        {15, L"SamrEnumerateAliasesInDomain"},
        {16, L"SamrGetAliasMembership"},
        {17, L"SamrLookupNamesInDomain"},
        {18, L"SamrLookupIdsInDomain"},
        {19, L"SamrOpenGroup"},
        {20, L"SamrQueryInformationGroup"},
        {21, L"SamrSetInformationGroup"},
        {22, L"SamrAddMemberToGroup"},
        {23, L"SamrDeleteGroup"},
        {24, L"SamrRemoveMemberFromGroup"},
        {25, L"SamrGetMembersInGroup"},
        {26, L"SamrSetMemberAttributesOfGroup"},
        {27, L"SamrOpenAlias"},
        {28, L"SamrQueryInformationAlias"},
        {29, L"SamrSetInformationAlias"},
        {30, L"SamrDeleteAlias"},
        {31, L"SamrAddMemberToAlias"},
        {32, L"SamrRemoveMemberFromAlias"},
        {33, L"SamrGetMembersInAlias"},
        {34, L"SamrOpenUser"},
        {35, L"SamrDeleteUser"},
        {36, L"SamrQueryInformationUser"},
        {37, L"SamrSetInformationUser"},
        {38, L"SamrChangePasswordUser"},
        {39, L"SamrGetGroupsForUser"},
        {40, L"SamrQueryDisplayInformation"},
        {41, L"SamrGetDisplayEnumerationIndex"},
        {42, L"SamrTestPrivateFunctionsDomain"},
        {43, L"SamrTestPrivateFunctionsUser"},
        {44, L"SamrGetUserDomainPasswordInformation"},
        {45, L"SamrRemoveMemberFromForeignDomain"},
        {46, L"SamrQueryInformationDomain2"},
        {47, L"SamrQueryInformationUser2"},
        {48, L"SamrQueryDisplayInformation2"},
        {49, L"SamrGetDisplayEnumerationIndex2"},
        {50, L"SamrCreateUser2InDomain"},
        {51, L"SamrQueryDisplayInformation3"},
        {52, L"SamrAddMultipleMembersToAlias"},
        {53, L"SamrRemoveMultipleMembersFromAlias"},
        {54, L"SamrOemChangePasswordUser2"},
        {55, L"SamrUnicodeChangePasswordUser2"},
        {56, L"SamrGetDomainPasswordInformation"},
        {57, L"SamrConnect2"},
        {58, L"SamrSetInformationUser2"},
        {59, L"SamrSetBootKeyInformation"},
        {60, L"SamrGetBootKeyInformation"},
        {61, L"SamrConnect3"},
        {62, L"SamrConnect4"},
        {63, L"SamrUnicodeChangePasswordUser3"},
        {64, L"SamrConnect5"},
        {65, L"SamrRidToSid"},
        {66, L"SamrSetDSRMPassword"},
        {67, L"SamrValidatePassword"},
        {68, L"SamrQueryLocalizableAccountsInDomain"},
        {69, L"SamrPerformGenericOperation"},
        {73, L"SamrUnicodeChangePasswordUser4"}
    };

std::map<int,std::wstring> winregOpnums = {
        {0, L"OpenClassesRoot"},
        {1, L"OpenCurrentUser"},
        {2, L"OpenLocalMachine"},
        {3, L"OpenPerformanceData"},
        {4, L"OpenUsers"},
        {5, L"BaseRegCloseKey"},
        {6, L"BaseRegCreateKey"},
        {7, L"BaseRegDeleteKey"},
        {8, L"BaseRegDeleteValue"},
        {9, L"BaseRegEnumKey"},
        {10, L"BaseRegEnumValue"},
        {11, L"BaseRegFlushKey"},
        {12, L"BaseRegGetKeySecurity"},
        {13, L"BaseRegLoadKey"},
        {14, L"BaseRegNotifyChangeKeyValue"},
        {15, L"BaseRegOpenKey"},
        {16, L"BaseRegQueryInfoKey"},
        {17, L"BaseRegQueryValue"},
        {18, L"BaseRegReplaceKey"},
        {19, L"BaseRegRestoreKey"},
        {20, L"BaseRegSaveKey"},
        {21, L"BaseRegSetKeySecurity"},
        {22, L"BaseRegSetValue"},
        {23, L"BaseRegUnLoadKey"},
        {24, L"BaseInitiateSystemShutdown"},
        {25, L"BaseAbortSystemShutdown"},
        {26, L"BaseRegGetVersion"},
        {27, L"OpenCurrentConfig"},
        {28, L"OpenDynData"},
        {29, L"BaseRegQueryMultipleValues"},
        {30, L"BaseInitiateSystemShutdownEx"},
        {31, L"BaseRegSaveKeyEx"},
        {32, L"OpenPerformanceText"},
        {33, L"OpenPerformanceNlsText"},
        {34, L"BaseRegQueryMultipleValues2"},
        {35, L"BaseRegDeleteKeyEx"}
    };

std::map<int,std::wstring> dssetupOpnums = {
        {0, L"DsRolerGetPrimaryDomainInformation"},
        {1, L"DsRolerDnsNameToFlatName"},
        {2, L"DsRolerDcAsDc"},
        {3, L"DsRolerDcAsReplica"},
        {4, L"DsRolerDemoteDc"},
        {5, L"DsRolerGetDcOperationProgress"},
        {6, L"DsRolerGetDcOperationResults"},
        {7, L"DsRolerCancel"},
        {8, L"DsRolerServerSaveStateForUpgrade"},
        {9, L"DsRolerUpgradeDownlevelServer"},
        {10, L"DsRolerAbortDownlevelServerUpgrade"}
    };

std::map<int,std::wstring> svcctlOpnums = {
        {0, L"CloseServiceHandle"},
        {1, L"ControlService"},
        {2, L"DeleteService"},
        {3, L"LockServiceDatabase"},
        {4, L"QueryServiceObjectSecurity"},
        {5, L"SetServiceObjectSecurity"},
        {6, L"QueryServiceStatus"},
        {7, L"SetServiceStatus"},
        {8, L"UnlockServiceDatabase"},
        {9, L"NotifyBootConfigStatus"},
        {10, L"ScSetServiceBitsW"},
        {11, L"ChangeServiceConfigW"},
        {12, L"CreateServiceW"},
        {13, L"EnumDependentServicesW"},
        {14, L"EnumServicesStatusW"},
        {15, L"OpenSCManagerW"},
        {16, L"OpenServiceW"},
        {17, L"QueryServiceConfigW"},
        {18, L"QueryServiceLockStatusW"},
        {19, L"StartServiceW"},
        {20, L"GetServiceDisplayNameW"},
        {21, L"GetServiceKeyNameW"},
        {22, L"ScSetServiceBitsA"},
        {23, L"ChangeServiceConfigA"},
        {24, L"CreateServiceA"},
        {25, L"EnumDependentServicesA"},
        {26, L"EnumServicesStatusA"},
        {27, L"OpenSCManagerA"},
        {28, L"OpenServiceA"},
        {29, L"QueryServiceConfigA"},
        {30, L"QueryServiceLockStatusA"},
        {31, L"StartServiceA"},
        {32, L"GetServiceDisplayNameA"},
        {33, L"GetServiceKeyNameA"},
        {34, L"ScGetCurrentGroupStateW"},
        {35, L"EnumServiceGroupW"},
        {36, L"ChangeServiceConfig2A"},
        {37, L"ChangeServiceConfig2W"},
        {38, L"QueryServiceConfig2A"},
        {39, L"QueryServiceConfig2W"},
        {40, L"QueryServiceStatusEx"},
        {41, L"EnumServicesStatusExA"},
        {42, L"EnumServicesStatusExW"},
        {43, L"ScSendTSMessage"},
        {44, L"CreateServiceWOW64A"},
        {45, L"CreateServiceWOW64W"},
        {46, L"ScQueryServiceTagInfo"},
        {47, L"NotifyServiceStatusChange"},
        {48, L"GetNotifyResult"},
        {49, L"CloseNotifyHandle"},
        {50, L"ControlServiceExA"},
        {51, L"ControlServiceExW"},
        {52, L"ScSendPnPMessage"},
        {53, L"ScValidatePnPService"},
        {54, L"ScOpenServiceStatusHandle"},
        {56, L"QueryServiceConfigEx"},
        {60, L"CreateWowService"},
        {64, L"OpenSCManager2"}
    };

std::map<int,std::wstring> browserOpnums = {
        {0, L"BrowserrServerEnum"},
        {1, L"BrowserrDebugCall"},
        {2, L"BrowserrQueryOtherDomains"},
        {3, L"BrowserrResetNetlogonState"},
        {4, L"BrowserrDebugTrace"},
        {5, L"BrowserrQueryStatistics"},
        {6, L"BrowserrResetStatistics"},
        {7, L"NetrBrowserStatisticsClear"},
        {8, L"NetrBrowserStatisticsGet"},
        {9, L"BrowserrSetNetlogonState"},
        {10, L"BrowserrQueryEmulatedDomains"},
        {11, L"BrowserrServerEnumEx"}
    };

std::map<int,std::wstring> AudioSrvOpnums = {
        {0, L"gfxCreateZoneFactoriesList"},
        {1, L"gfxCreateGfxFactoriesList"},
        {2, L"gfxCreateGfxList"},
        {3, L"gfxRemoveGfx"},
        {4, L"gfxAddGfx"},
        {5, L"gfxModifyGx"},
        {6, L"gfxOpenGfx"},
        {7, L"gfxLogon"},
        {8, L"gfxLogoff"},
        {9, L"winmmRegisterSessionNotificationEvent"},
        {10, L"winmmUnregisterSessionNotification"},
        {11, L"winmmSessionConnectState"},
        {12, L"wdmDriverOpenDrvRegKey"},
        {13, L"winmmAdvisePreferredDeviceChange"},
        {14, L"winmmGetPnpInfo"}
    };

std::map<int,std::wstring> AudioRpcOpnums = {
        {0, L"AudioServerConnect"},
        {1, L"AudioServerDisconnect"},
        {2, L"AudioServerInitialize"},
        {3, L"AudioServerGetAudioSession"},
        {4, L"AudioServerCreateStream"},
        {5, L"AudioServerDestroyStream"},
        {6, L"AudioServerGetStreamLatency"},
        {7, L"AudioServerGetMixFormat"},
        {8, L"AudioServerIsFormatSupported"},
        {9, L"AudioServerGetDevicePeriod"},
        {10, L"AudioVolumeGetMasterVolumeLevelScalar"},
        {11, L"AudioSessionGetProcessId"},
        {12, L"AudioSessionGetState"},
        {13, L"AudioSessionGetLastActivation"},
        {14, L"AudioSessionGetLastInactivation"},
        {15, L"AudioSessionIsSystemSoundsSession"},
        {16, L"AudioSessionGetDisplayName"},
        {17, L"AudioSessionSetDisplayName"},
        {18, L"AudioSessionGetSessionClass"},
        {19, L"AudioSessionSetSessionClass"},
        {20, L"AudioSessionGetVolume"},
        {21, L"AudioSessionSetVolume"},
        {22, L"AudioSessionGetMute"},
        {23, L"AudioSessionSetMute"},
        {24, L"AudioSessionGetChannelCount"},
        {25, L"AudioSessionSetChannelVolume"},
        {26, L"AudioSessionGetChannelVolume"},
        {27, L"AudioSessionSetAllVolumes"},
        {28, L"AudioSessionGetAllVolumes"},
        {29, L"AudioServerDisconnect"},
        {30, L"AudioServerGetMixFormat"},
        {31, L"PolicyConfigGetDeviceFormat"},
        {32, L"PolicyConfigSetDeviceFormat"},
        {33, L"AudioServerGetDevicePeriod"},
        {34, L"PolicyConfigSetProcessingPeriod"},
        {35, L"PolicyConfigGetShareMode"},
        {36, L"PolicyConfigSetShareMode"},
        {37, L"GetAudioSessionManager"},
        {38, L"AudioSessionManagerDestroy"},
        {39, L"AudioSessionManagerGetAudioSession"},
        {40, L"AudioSessionManagerGetCurrentSession"},
        {41, L"AudioSessionManagerGetExistingSession"},
        {42, L"AudioSessionManagerAddAudioSessionClientNotification"},
        {43, L"AudioSessionManagerDeleteAudioSessionClientNotification"},
        {44, L"AudioSessionManagerAddAudioSessionClientNotification"},
        {45, L"AudioVolumeConnect"},
        {46, L"AudioVolumeDisconnect"},
        {47, L"AudioVolumeGetChannelCount"},
        {48, L"AudioVolumeSetMasterVolumeLevel"},
        {49, L"AudioVolumeSetMasterVolumeLevelScalar"},
        {50, L"AudioVolumeGetMasterVolumeLevel"},
        {51, L"AudioVolumeGetMasterVolumeLevelScalar"},
        {52, L"AudioVolumeSetChannelVolumeLevel"},
        {53, L"AudioVolumeSetChannelVolumeLevelScalar"},
        {54, L"AudioVolumeGetChannelVolumeLevel"},
        {55, L"AudioVolumeGetChannelVolumeLevelScalar"},
        {56, L"AudioVolumeSetMute"},
        {57, L"AudioSessionGetDisplayName"},
        {58, L"AudioVolumeAddMasterVolumeNotification"},
        {59, L"AudioVolumeDeleteMasterVolumeNotification"},
        {60, L"AudioMeterGetAverageRMS"},
        {61, L"AudioMeterGetChannelsRMS"},
        {62, L"AudioMeterGetPeakValue"},
        {63, L"AudioMeterGetChannelsPeakValues"},
        {64, L"AudioVolumeGetStepInfo"},
        {65, L"AudioVolumeStepUp"},
        {66, L"AudioVolumeStepDown"}
    };

std::map<int,std::wstring> dhcpcsvc6Opnums = {
        {0, L"RpcSrvRequestPrefix"},
        {1, L"RpcSrvRenewPrefix"},
        {2, L"RpcSrvReleasePrefix"},
        {3, L"RpcSrvRequestParams"}
    };

std::map<int,std::wstring> RpcSrvDHCPCOpnums = {
        {0, L"RpcSrvEnableDhcp"},
        {1, L"RpcSrvRenewLease"},
        {2, L"RpcSrvRenewLeaseByBroadcast"},
        {3, L"RpcSrvReleaseLease"},
        {4, L"RpcSrvSetFallbackParams"},
        {5, L"RpcSrvGetFallbackParams"},
        {6, L"RpcSrvFallbackRefreshParams"},
        {7, L"RpcSrvStaticRefreshParams"},
        {8, L"RpcSrvRemoveDnsRegistrations"},
        {9, L"RpcSrvRequestParams"},
        {10, L"RpcSrvPersistentRequestParams"},
        {11, L"RpcSrvRegisterParams"},
        {12, L"RpcSrvDeRegisterParams"},
        {13, L"RpcSrvEnumInterfaces"},
        {14, L"RpcSrvQueryLeaseInfo"},
        {15, L"RpcSrvSetClassId"},
        {16, L"RpcSrvGetClassId"},
        {17, L"RpcSrvSetClientId"},
        {18, L"RpcSrvGetClientId"},
        {19, L"RpcSrvNotifyMediaReconnected"},
        {20, L"RpcSrvGetOriginalSubnetMask"},
        {21, L"RpcSrvSetMSFTVendorSpecificOptions"},
        {22, L"RpcSrvRequestCachedParams"},
        {23, L"RpcSrvRegisterConnectionStateNotification"},
        {24, L"RpcSrvDeRegisterConnectionStateNotification"},
        {25, L"RpcSrvGetNotificationStatus"},
        {26, L"RpcSrvGetDhcpServicedConnections"}
    };

std::map<int,std::wstring> lcrpcOpnums = {
        {0, L"RpcLicensingOpenServer"},
        {1, L"RpcLicensingCloseServer"},
        {2, L"RpcLicensingLoadPolicy"},
        {3, L"RpcLicensingUnloadPolicy"},
        {4, L"RpcLicensingSetPolicy"},
        {5, L"RpcLicensingGetAvailablePolicyIds"},
        {6, L"RpcLicensingGetPolicy"},
        {7, L"RpcLicensingGetPolicyInformation"},
        {8, L"RpcLicensingDeactivateCurrentPolicy"}
    };

std::map<int,std::wstring> winstation_rpcOpnums = {
        {0, L"RpcWinStationOpenServer"},
        {1, L"RpcWinStationCloseServer"},
        {2, L"RpcIcaServerPing"},
        {3, L"RpcWinStationEnumerate"},
        {4, L"RpcWinStationRename"},
        {5, L"RpcWinStationQueryInformation"},
        {6, L"RpcWinStationSetInformation"},
        {7, L"RpcWinStationSendMessage"},
        {8, L"RpcLogonIdFromWinStationName"},
        {9, L"RpcWinStationNameFromLogonId"},
        {10, L"RpcWinStationConnect"},
        {11, L"RpcWinStationVirtualOpen"},
        {12, L"RpcWinStationBeepOpen"},
        {13, L"RpcWinStationDisconnect"},
        {14, L"RpcWinStationReset"},
        {15, L"RpcWinStationShutdownSystem"},
        {16, L"RpcWinStationWaitSystemEvent"},
        {17, L"RpcWinStationShadow"},
        {18, L"RpcWinStationShadowTargetSetup"},
        {19, L"RpcWinStationShadowTarget"},
        {20, L"RpcWinStationGenerateLicense"},
        {21, L"RpcWinStationInstallLicense"},
        {22, L"RpcWinStationEnumerateLicenses"},
        {23, L"RpcWinStationActivateLicense"},
        {24, L"RpcWinStationRemoveLicense"},
        {25, L"RpcWinStationQueryLicense"},
        {26, L"RpcWinStationSetPoolCount"},
        {27, L"RpcWinStationQueryUpdateRequired"},
        {28, L"RpcWinStationCallback"},
        {29, L"RpcWinStationGetApplicationInfo"},
        {30, L"RpcWinStationReadRegistry"},
        {31, L"RpcWinStationWaitForConnect"},
        {32, L"RpcWinStationNotifyLogon"},
        {33, L"RpcWinStationNotifyLogoff"},
        {34, L"RpcWinStationEnumerateProcesses"},
        {35, L"RpcWinStationAnnoyancePopup"},
        {36, L"RpcWinStationEnumerateProcesses"},
        {37, L"RpcWinStationTerminateProcess"},
        {38, L"RpcServerNWLogonSetAdmin"},
        {39, L"RpcServerNWLogonQueryAdmin"},
        {40, L"RpcWinStationNtsdDebug"},
        {41, L"RpcWinStationBreakPoint"},
        {42, L"RpcWinStationCheckForApplicationName"},
        {43, L"RpcWinStationGetAllProcesses"},
        {44, L"RpcWinStationGetProcessSid"},
        {45, L"RpcWinStationGetTermSrvCountersValue"},
        {46, L"RpcWinStationReInitializeSecurity"},
        {47, L"RpcWinStationBroadcastSystemMessage"},
        {48, L"RpcWinStationSendWindowMessage"},
        {49, L"RpcWinStationNotifyNewSession"},
        {50, L"RpcServerGetInternetConnectorStatus"},
        {51, L"RpcServerSetInternetConnectorStatus"},
        {52, L"RpcServerQueryInetConnectorInformation"},
        {53, L"RpcWinStationGetLanAdapterName"},
        {54, L"RpcWinStationUpdateUserConfig"},
        {55, L"RpcWinStationQueryLogonCredentials"},
        {56, L"RpcWinStationRegisterConsoleNotification"},
        {57, L"RpcWinStationUnRegisterConsoleNotification"},
        {58, L"RpcWinStationUpdateSettings"},
        {59, L"RpcWinStationShadowStop"},
        {60, L"RpcWinStationCloseServerEx"},
        {61, L"RpcWinStationIsHelpAssistantSession"},
        {62, L"RpcWinStationGetMachinePolicy"},
        {63, L"RpcWinStationUpdateClientCachedCredentials"},
        {64, L"RpcWinStationFUSCanRemoteUserDisconnect"},
        {65, L"RpcWinStationCheckLoopBack"},
        {66, L"RpcConnectCallback"},
        {67, L"RpcWinStationNotifyDisconnectPipe"},
        {68, L"RpcWinStationSessionInitialized"},
        {69, L"RpcRemoteAssistancePrepareSystemRestore"},
        {70, L"RpcWinStationGetAllProcesses_NT6"},
        {71, L"RpcWinStationRegisterNotificationEvent"},
        {72, L"RpcWinStationUnRegisterNotificationEvent"},
        {73, L"RpcWinStationAutoReconnect"},
        {74, L"RpcWinStationCheckAccess"},
        {75, L"RpcWinStationOpenSessionDirectory"}
    };

std::map<int,std::wstring> NsiSOpnums = {
        {0, L"nsi_binding_export"},
        {1, L"nsi_binding_unexport"}
    };

std::map<int,std::wstring> NsiCOpnums = {
        {0, L"nsi_binding_lookup_begin"},
        {1, L"nsi_binding_lookup_done"},
        {2, L"nsi_binding_lookup_next"},
        {3, L"nsi_mgmt_handle_set_exp_age"}
    };

std::map<int,std::wstring> NsiMOpnums = {
        {0, L"nsi_group_delete"},
        {1, L"nsi_group_mbr_add"},
        {2, L"nsi_group_mbr_remove"},
        {3, L"nsi_group_mbr_inq_begin"},
        {4, L"nsi_group_mbr_inq_next"},
        {5, L"nsi_group_mbr_inq_done"},
        {6, L"nsi_profile_delete"},
        {7, L"nsi_profile_elt_add"},
        {8, L"nsi_profile_elt_remove"},
        {9, L"nsi_profile_elt_inq_begin"},
        {10, L"nsi_profile_elt_inq_next"},
        {11, L"nsi_profile_elt_inq_done"},
        {12, L"nsi_entry_object_inq_begin"},
        {13, L"nsi_entry_object_inq_next"},
        {14, L"nsi_entry_object_inq_done"},
        {15, L"nsi_entry_expand_name"},
        {16, L"nsi_mgmt_binding_unexport"},
        {17, L"nsi_mgmt_entry_delete"},
        {18, L"nsi_mgmt_entry_create"},
        {19, L"nsi_mgmt_entry_inq_if_ids"},
        {20, L"nsi_mgmt_inq_exp_age"},
        {21, L"nsi_mgmt_inq_set_age"}
    };

std::map<int,std::wstring> eventlogOpnums = {
        {0, L"ElfrClearELFW"},
        {1, L"ElfrBackupELFW"},
        {2, L"ElfrCloseEL"},
        {3, L"ElfrDeregisterEventSource"},
        {4, L"ElfrNumberOfRecords"},
        {5, L"ElfrOldestRecord"},
        {6, L"ElfrChangeNotify"},
        {7, L"ElfrOpenELW"},
        {8, L"ElfrRegisterEventSourceW"},
        {9, L"ElfrOpenBELW"},
        {10, L"ElfrReadELW"},
        {11, L"ElfrReportEventW"},
        {12, L"ElfrClearELFA"},
        {13, L"ElfrBackupELFA"},
        {14, L"ElfrOpenELA"},
        {15, L"ElfrRegisterEventSourceA"},
        {16, L"ElfrOpenBELA"},
        {17, L"ElfrReadELA"},
        {18, L"ElfrReportEventA"},
        {19, L"ElfrRegisterClusterSvc"},
        {20, L"ElfrDeregisterClusterSvc"},
        {21, L"ElfrWriteClusterEvents"},
        {22, L"ElfrGetLogInformation"},
        {23, L"ElfrFlushEL"},
        {24, L"ElfrReportEventAndSourceW"},
        {25, L"ElfrReportEventExW"},
        {26, L"ElfrReportEventExA"}
    };

std::map<int,std::wstring> ISeclogonOpnums = {
        {0, L"SeclCreateProcessWithLogonW"},
        {1, L"SeclCreateProcessWithLogonExW"}
    };

std::map<int,std::wstring> IKeySvcOpnums = {
        {0, L"KeyrOpenKeyService"},
        {1, L"KeyrEnumerateProviders"},
        {2, L"KeyrEnumerateProviderTypes"},
        {3, L"KeyrEnumerateProvContainers"},
        {4, L"KeyrCloseKeyService"},
        {5, L"KeyrGetDefaultProvider"},
        {6, L"KeyrSetDefaultProvider"},
        {7, L"KeyrEnroll"},
        {8, L"KeyrExportCert"},
        {9, L"KeyrImportCert"},
        {10, L"KeyrEnumerateAvailableCertTypes"},
        {11, L"KeyrEnumerateCAs"},
        {12, L"KeyrEnroll_V2"},
        {13, L"KeyrQueryRequestStatus"}
    };

std::map<int,std::wstring> IKeySvc2Opnums = {
        {0, L"KSrSubmitRequest"},
        {1, L"KSrGetTemplates"},
        {2, L"KSrGetCAs"}
    };

std::map<int,std::wstring> ICertProtectOpnums = {
        {0, L"SSCertProtectFunction"}
    };

std::map<int,std::wstring> ICatDBSvcOpnums = {
        {0, L"SSCatDBAddCatalog"},
        {1, L"SSCatDBDeleteCatalog"},
        {2, L"SSCatDBEnumCatalogs"},
        {3, L"SSCatDBRegisterForChangeNotification"},
        {4, L"KeyrCloseKeyService"},
        {5, L"SSCatDBRebuildDatabase"}
    };

std::map<int,std::wstring> lsarpcOpnums = {
        {0, L"LsarClose"},
        {1, L"LsarDelete"},
        {2, L"LsarEnumeratePrivileges"},
        {3, L"LsarQuerySecurityObject"},
        {4, L"LsarSetSecurityObject"},
        {5, L"LsarChangePassword"},
        {6, L"LsarOpenPolicy"},
        {7, L"LsarQueryInformationPolicy"},
        {8, L"LsarSetInformationPolicy"},
        {9, L"LsarClearAuditLog"},
        {10, L"LsarCreateAccount"},
        {11, L"LsarEnumerateAccounts"},
        {12, L"LsarCreateTrustedDomain"},
        {13, L"LsarEnumerateTrustedDomains"},
        {14, L"LsarLookupNames"},
        {15, L"LsarLookupSids"},
        {16, L"LsarCreateSecret"},
        {17, L"LsarOpenAccount"},
        {18, L"LsarEnumeratePrivilegesAccount"},
        {19, L"LsarAddPrivilegesToAccount"},
        {20, L"LsarRemovePrivilegesFromAccount"},
        {21, L"LsarGetQuotasForAccount"},
        {22, L"LsarSetQuotasForAccount"},
        {23, L"LsarGetSystemAccessAccount"},
        {24, L"LsarSetSystemAccessAccount"},
        {25, L"LsarOpenTrustedDomain"},
        {26, L"LsarQueryInfoTrustedDomain"},
        {27, L"LsarSetInformationTrustedDomain"},
        {28, L"LsarOpenSecret"},
        {29, L"LsarSetSecret"},
        {30, L"LsarQuerySecret"},
        {31, L"LsarLookupPrivilegeValue"},
        {32, L"LsarLookupPrivilegeName"},
        {33, L"LsarLookupPrivilegeDisplayName"},
        {34, L"LsarDeleteObject"},
        {35, L"LsarEnumerateAccountsWithUserRight"},
        {36, L"LsarEnumerateAccountRights"},
        {37, L"LsarAddAccountRights"},
        {38, L"LsarRemoveAccountRights"},
        {39, L"LsarQueryTrustedDomainInfo"},
        {40, L"LsarSetTrustedDomainInfo"},
        {41, L"LsarDeleteTrustedDomain"},
        {42, L"LsarStorePrivateData"},
        {43, L"LsarRetrievePrivateData"},
        {44, L"LsarOpenPolicy2"},
        {45, L"LsarGetUserName"},
        {46, L"LsarQueryInformationPolicy2"},
        {47, L"LsarSetInformationPolicy2"},
        {48, L"LsarQueryTrustedDomainInfoByName"},
        {49, L"LsarSetTrustedDomainInfoByName"},
        {50, L"LsarEnumerateTrustedDomainsEx"},
        {51, L"LsarCreateTrustedDomainEx"},
        {52, L"LsarCloseTrustedDomainEx"},
        {53, L"LsarQueryDomainInformationPolicy"},
        {54, L"LsarSetDomainInformationPolicy"},
        {55, L"LsarOpenTrustedDomainByName"},
        {56, L"LsarTestCall"},
        {57, L"LsarLookupSids2"},
        {58, L"LsarLookupNames2"},
        {59, L"LsarCreateTrustedDomainEx2"},
        {60, L"CredrWrite"},
        {61, L"CredrRead"},
        {62, L"CredrEnumerate"},
        {63, L"CredrWriteDomainCredentials"},
        {64, L"CredrReadDomainCredentials"},
        {65, L"CredrDelete"},
        {66, L"CredrGetTargetInfo"},
        {67, L"CredrProfileLoaded"},
        {68, L"LsarLookupNames3"},
        {69, L"CredrGetSessionTypes"},
        {70, L"LsarRegisterAuditEvent"},
        {71, L"LsarGenAuditEvent"},
        {72, L"LsarUnregisterAuditEvent"},
        {73, L"LsarQueryForestTrustInformation"},
        {74, L"LsarSetForestTrustInformation"},
        {75, L"CredrRename"},
        {76, L"LsarLookupSids3"},
        {77, L"LsarLookupNames4"},
        {78, L"LsarOpenPolicySce"},
        {79, L"LsarAdtRegisterSecurityEventSource"},
        {80, L"LsarAdtUnregisterSecurityEventSource"},
        {81, L"LsarAdtReportSecurityEvent"},
        {82, L"CredrFindBestCredential"},
        {83, L"LsarSetAuditPolicy"},
        {84, L"LsarQueryAuditPolicy"},
        {85, L"LsarEnumerateAuditPolicy"},
        {86, L"LsarEnumerateAuditCategories"},
        {87, L"LsarEnumerateAuditSubCategories"},
        {88, L"LsarLookupAuditCategoryName"},
        {89, L"LsarLookupAuditSubCategoryName"},
        {90, L"LsarSetAuditSecurity"},
        {91, L"LsarQueryAuditSecurity"},
        {92, L"CredReadByTokenHandle"},
        {93, L"CredrRestoreCredentials"},
        {94, L"CredrBackupCredentials"},
        {129, L"LsarCreateTrustedDomainEx3"},
        {130, L"LsarOpenPolicy3"},
        {133, L"LsarSetForestTrustInformation2"}
    };

std::map<int,std::wstring> msgsvcOpnums = {
        {0, L"NetrMessageNameAdd"},
        {1, L"NetrMessageNameEnum"},
        {2, L"NetrMessageNameGetInfo"},
        {3, L"NetrMessageNameDel"}
    };

std::map<int,std::wstring> msgsvcsendOpnums = {
        {0, L"NetrSendMessage"}
    };

std::map<int,std::wstring> pnpOpnums = {
        {0, L"PNP_Disconnect"},
        {1, L"PNP_Connect"},
        {2, L"PNP_GetVersion"},
        {3, L"PNP_GetGlobalState"},
        {4, L"PNP_InitDetection"},
        {5, L"PNP_ReportLogOn"},
        {6, L"PNP_ValidateDeviceInstance"},
        {7, L"PNP_GetRootDeviceInstance"},
        {8, L"PNP_GetRelatedDeviceInstance"},
        {9, L"PNP_EnumerateSubKeys"},
        {10, L"PNP_GetDeviceList"},
        {11, L"PNP_GetDeviceListSize"},
        {12, L"PNP_GetDepth"},
        {13, L"PNP_GetDeviceRegProp"},
        {14, L"PNP_SetDeviceRegProp"},
        {15, L"PNP_GetClassInstance"},
        {16, L"PNP_CreateKey"},
        {17, L"PNP_DeleteRegistryKey"},
        {18, L"PNP_GetClassCount"},
        {19, L"PNP_GetClassName"},
        {20, L"PNP_DeleteClassKey"},
        {21, L"PNP_GetInterfaceDeviceAlias"},
        {22, L"PNP_GetInterfaceDeviceList"},
        {23, L"PNP_GetInterfaceDeviceListSize"},
        {24, L"PNP_RegisterDeviceClassAssociation"},
        {25, L"PNP_UnregisterDeviceClassAssociation"},
        {26, L"PNP_GetClassRegProp"},
        {27, L"PNP_SetClassRegProp"},
        {28, L"PNP_CreateDevInst"},
        {29, L"PNP_DeviceInstanceAction"},
        {30, L"PNP_GetDeviceStatus"},
        {31, L"PNP_SetDeviceProblem"},
        {32, L"PNP_DisableDevInst"},
        {33, L"PNP_UninstallDevInst"},
        {34, L"PNP_AddID"},
        {35, L"PNP_RegisterDriver"},
        {36, L"PNP_QueryRemove"},
        {37, L"PNP_RequestDeviceEject"},
        {38, L"PNP_IsDockStationPresent"},
        {39, L"PNP_RequestEjectPC"},
        {40, L"PNP_HwProfFlags"},
        {41, L"PNP_GetHwProfInfo"},
        {42, L"PNP_AddEmptyLogConf"},
        {43, L"PNP_FreeLogConf"},
        {44, L"PNP_GetFirstLogConf"},
        {45, L"PNP_GetNextLogConf"},
        {46, L"PNP_GetLogConfPriority"},
        {47, L"PNP_AddResDes"},
        {48, L"PNP_FreeResDes"},
        {49, L"PNP_GetNextResDes"},
        {50, L"PNP_GetResDesData"},
        {51, L"PNP_GetResDesDataSize"},
        {52, L"PNP_ModifyResDes"},
        {53, L"PNP_DetectResourceConflict"},
        {54, L"PNP_QueryResConfList"},
        {55, L"PNP_SetHwProf"},
        {56, L"PNP_QueryArbitratorFreeData"},
        {57, L"PNP_QueryArbitratorFreeSize"},
        {58, L"PNP_RunDetection"},
        {59, L"PNP_RegisterNotification"},
        {60, L"PNP_UnregisterNotification"},
        {61, L"PNP_GetCustomDevProp"},
        {62, L"PNP_GetVersionInternal"},
        {63, L"PNP_GetBlockedDriverInfo"},
        {64, L"PNP_GetServerSideDeviceInstallFlags"},
        {65, L"PNP_GetObjectPropKeys"},
        {66, L"PNP_GetObjectProp"},
        {67, L"PNP_SetObjectProp"},
        {68, L"PNP_InstallDevInst"},
        {69, L"PNP_ApplyPowerSettings"},
        {70, L"PNP_DriverStoreAddDriverPackage"},
        {71, L"PNP_DriverStoreDeleteDriverPackage"},
        {72, L"PNP_RegisterServiceNotification"},
        {73, L"PNP_SetActiveService"},
        {74, L"PNP_DeleteServiceDevices"}
    };

std::map<int,std::wstring> DnsServerOpnums = {
        {0, L"DnssrvOperation"},
        {1, L"DnssrvQuery"},
        {2, L"DnssrvComplexOperation"},
        {3, L"DnssrvEnumRecords"},
        {4, L"DnssrvUpdateRecord"},
        {5, L"DnssrvOperation2"},
        {6, L"DnssrvQuery2"},
        {7, L"DnssrvComplexOperation2"},
        {8, L"DnssrvEnumRecords2"},
        {9, L"DnssrvUpdateRecord2"},
        {10, L"DnssrvUpdateRecord3"},
        {11, L"DnssrvEnumRecords3"},
        {12, L"DnssrvOperation3"},
        {13, L"DnssrvQuery3"},
        {14, L"DnssrvComplexOperation3"},
        {15, L"DnssrvOperation4"},
        {16, L"DnssrvQuery4"},
        {17, L"DnssrvUpdateRecord4"},
        {18, L"DnssrvEnumRecords4"}
    };

std::map<int,std::wstring> lls_licenseOpnums = {
        {0, L"LlsrLicenseRequestW"},
        {1, L"LlsrLicenseFree"}
    };

std::map<int,std::wstring> llsrpcOpnums = {
        {0, L"LlsrConnect"},
        {1, L"LlsrClose"},
        {2, L"LlsrLicenseEnumW"},
        {3, L"LlsrLicenseEnumA"},
        {4, L"LlsrLicenseAddW"},
        {5, L"LlsrLicenseAddA"},
        {6, L"LlsrProductEnumW"},
        {7, L"LlsrProductEnumA"},
        {8, L"LlsrProductAddW"},
        {9, L"LlsrProductAddA"},
        {10, L"LlsrProductUserEnumW"},
        {11, L"LlsrProductUserEnumA"},
        {12, L"LlsrProductServerEnumW"},
        {13, L"LlsrProductServerEnumA"},
        {14, L"LlsrProductLicenseEnumW"},
        {15, L"LlsrProductLicenseEnumA"},
        {16, L"LlsrUserEnumW"},
        {17, L"LlsrUserEnumA"},
        {18, L"LlsrUserInfoGetW"},
        {19, L"LlsrUserInfoGetA"},
        {20, L"LlsrUserInfoSetW"},
        {21, L"LlsrUserInfoSetA"},
        {22, L"LlsrUserDeleteW"},
        {23, L"LlsrUserDeleteA"},
        {24, L"LlsrUserProductEnumW"},
        {25, L"LlsrUserProductEnumA"},
        {26, L"LlsrUserProductDeleteW"},
        {27, L"LlsrUserProductDeleteA"},
        {28, L"LlsrMappingEnumW"},
        {29, L"LlsrMappingEnumA"},
        {30, L"LlsrMappingInfoGetW"},
        {31, L"LlsrMappingInfoGetA"},
        {32, L"LlsrMappingInfoSetW"},
        {33, L"LlsrMappingInfoSetA"},
        {34, L"LlsrMappingUserEnumW"},
        {35, L"LlsrMappingUserEnumA"},
        {36, L"LlsrMappingUserAddW"},
        {37, L"LlsrMappingUserAddA"},
        {38, L"LlsrMappingUserDeleteW"},
        {39, L"LlsrMappingUserDeleteA"},
        {40, L"LlsrMappingAddW"},
        {41, L"LlsrMappingAddA"},
        {42, L"LlsrMappingDeleteW"},
        {43, L"LlsrMappingDeleteA"},
        {44, L"LlsrServerEnumW"},
        {45, L"LlsrServerEnumA"},
        {46, L"LlsrServerProductEnumW"},
        {47, L"LlsrServerProductEnumA"},
        {48, L"LlsrLocalProductEnumW"},
        {49, L"LlsrLocalProductEnumA"},
        {50, L"LlsrLocalProductInfoGetW"},
        {51, L"LlsrLocalProductInfoGetA"},
        {52, L"LlsrLocalProductInfoSetW"},
        {53, L"LlsrLocalProductInfoSetA"},
        {54, L"LlsrServiceInfoGetW"},
        {55, L"LlsrServiceInfoGetA"},
        {56, L"LlsrServiceInfoSetW"},
        {57, L"LlsrServiceInfoSetA"},
        {58, L"LlsrReplConnect"},
        {59, L"LlsrReplClose"},
        {60, L"LlsrReplicationRequestW"},
        {61, L"LlsrReplicationServerAddW"},
        {62, L"LlsrReplicationServerServiceAddW"},
        {63, L"LlsrReplicationServiceAddW"},
        {64, L"LlsrReplicationUserAddW"},
        {65, L"LlsrProductSecurityGetW"},
        {66, L"LlsrProductSecurityGetA"},
        {67, L"LlsrProductSecuritySetW"},
        {68, L"LlsrProductSecuritySetA"},
        {69, L"LlsrProductLicensesGetA"},
        {70, L"LlsrProductLicensesGetW"},
        {71, L"LlsrCertificateClaimEnumA"},
        {72, L"LlsrCertificateClaimEnumW"},
        {73, L"LlsrCertificateClaimAddCheckA"},
        {74, L"LlsrCertificateClaimAddCheckW"},
        {75, L"LlsrCertificateClaimAddA"},
        {76, L"LlsrCertificateClaimAddW"},
        {77, L"LlsrReplicationCertDbAddW"},
        {78, L"LlsrReplicationProductSecurityAddW"},
        {79, L"LlsrReplicationUserAddExW"},
        {80, L"LlsrCapabilityGet"},
        {81, L"LlsrLocalServiceEnumW"},
        {82, L"LlsrLocalServiceEnumA"},
        {83, L"LlsrLocalServiceAddA"},
        {84, L"LlsrLocalServiceAddW"},
        {85, L"LlsrLocalServiceInfoSetW"},
        {86, L"LlsrLocalServiceInfoSetA"},
        {87, L"LlsrLocalServiceInfoGetW"},
        {88, L"LlsrLocalServiceInfoGetA"},
        {89, L"LlsrCloseEx"}
    };

std::map<int,std::wstring> ICertPassageOpnums = {
        {0, L"CertServerRequest"}
    };

std::map<int,std::wstring> netdfsOpnums = {
        {0, L"NetrDfsManagerGetVersion"},
        {1, L"NetrDfsAdd"},
        {2, L"NetrDfsRemove"},
        {3, L"NetrDfsSetInfo"},
        {4, L"NetrDfsGetInfo"},
        {5, L"NetrDfsEnum"},
        {6, L"NetrDfsRename"},
        {7, L"NetrDfsMove"},
        {8, L"NetrDfsManagerGetConfigInfo"},
        {9, L"NetrDfsManagerSendSiteInfo"},
        {10, L"NetrDfsAddFtRoot"},
        {11, L"NetrDfsRemoveFtRoot"},
        {12, L"NetrDfsAddStdRoot"},
        {13, L"NetrDfsRemoveStdRoot"},
        {14, L"NetrDfsManagerInitialize"},
        {15, L"NetrDfsAddStdRootForced"},
        {16, L"NetrDfsGetDcAddress"},
        {17, L"NetrDfsSetDcAddress"},
        {18, L"NetrDfsFlushFtTable"},
        {19, L"NetrDfsAdd2"},
        {20, L"NetrDfsRemove2"},
        {21, L"NetrDfsEnumEx"},
        {22, L"NetrDfsSetInfo2"},
        {23, L"NetrDfsAddRootTarget"},
        {24, L"NetrDfsRemoveRootTarget"},
        {25, L"NetrDfsGetSupportedNamespaceVersion"}
    };

std::map<int,std::wstring> sfcapiOpnums = {
        {0, L"SfcSrv_GetNextProtectedFile"},
        {1, L"SfcSrv_IsFileProtected"},
        {2, L"SfcSrv_FileException"},
        {3, L"SfcSrv_InitiateScan"},
        {4, L"SfcSrv_PurgeCache"},
        {5, L"SfcSrv_SetCacheSize"},
        {6, L"SfcSrv_SetDisable"},
        {7, L"SfcSrv_InstallProtectedFiles"}
    };

std::map<int,std::wstring> nddeapiOpnums = {
        {0, L"NDdeShareAddW"},
        {1, L"NDdeShareDelA"},
        {2, L"NDdeShareDelW"},
        {3, L"NDdeGetShareSecurityA"},
        {4, L"NDdeGetShareSecurityW"},
        {5, L"NDdeSetShareSecurityA"},
        {6, L"NDdeSetShareSecurityW"},
        {7, L"NDdeShareEnumA"},
        {8, L"NDdeShareEnumW"},
        {9, L"NDdeShareGetInfoW"},
        {10, L"NDdeShareSetInfoW"},
        {11, L"NDdeSetTrustedShareA"},
        {12, L"NDdeSetTrustedShareW"},
        {13, L"NDdeGetTrustedShareA"},
        {14, L"NDdeGetTrustedShareW"},
        {15, L"NDdeTrustedShareEnumA"},
        {16, L"NDdeTrustedShareEnumW"},
        {18, L"NDdeSpecialCommand"}
    };

std::map<int,std::wstring> BackupKeyOpnums = {
        {0, L"bkrp_BackupKey"}
    };

std::map<int,std::wstring> wkssvcOpnums = {
        {0, L"NetrWkstaGetInfo"},
        {1, L"NetrWkstaSetInfo"},
        {2, L"NetrWkstaUserEnum"},
        {3, L"NetrWkstaUserGetInfo"},
        {4, L"NetrWkstaUserSetInfo"},
        {5, L"NetrWkstaTransportEnum"},
        {6, L"NetrWkstaTransportAdd"},
        {7, L"NetrWkstaTransportDel"},
        {8, L"NetrUseAdd"},
        {9, L"NetrUseGetInfo"},
        {10, L"NetrUseDel"},
        {11, L"NetrUseEnum"},
        {12, L"NetrMessageBufferSend"},
        {13, L"NetrWorkstationStatisticsGet"},
        {14, L"NetrLogonDomainNameAdd"},
        {15, L"NetrLogonDomainNameDel"},
        {16, L"NetrJoinDomain"},
        {17, L"NetrUnjoinDomain"},
        {18, L"NetrValidateName"},
        {19, L"NetrRenameMachineInDomain"},
        {20, L"NetrGetJoinInformation"},
        {21, L"NetrGetJoinableOUs"},
        {22, L"NetrJoinDomain2"},
        {23, L"NetrUnjoinDomain2"},
        {24, L"NetrRenameMachineInDomain2"},
        {25, L"NetrValidateName2"},
        {26, L"NetrGetJoinableOUs2"},
        {27, L"NetrAddAlternateComputerName"},
        {28, L"NetrRemoveAlternateComputerName"},
        {29, L"NetrSetPrimaryComputerName"},
        {30, L"NetrEnumerateComputerNames"},
        {31, L"NetrWorkstationResetDfsCache"}
    };

std::map<int,std::wstring> epmpOpnums = {
        {0, L"ept_insert"},
        {1, L"ept_delete"},
        {2, L"ept_lookup"},
        {3, L"ept_map"},
        {4, L"ept_lookup_handle_free"},
        {5, L"ept_inq_object"},
        {6, L"ept_mgmt_delete"},
        {7, L"ept_map_auth"},
        {8, L"ept_map_auth_async"}
    };

std::map<int,std::wstring> exchange_mapiOpnums = {
        {0, L"EcDoConnect"},
        {1, L"EcDoDisconnect"},
        {2, L"EcDoRpc"},
        {3, L"EcGetMoreRpc"},
        {4, L"EcRRegisterPushNotification"},
        {5, L"EcRUnregisterPushNotification"},
        {6, L"EcDummyRpc"},
        {7, L"EcRGetDCName"},
        {8, L"EcRNetGetDCName"},
        {9, L"EcDoRpcExt"},
        {10, L"EcDoConnectEx"},
        {11, L"EcDoRpcExt2"},
        {12, L"EcUnknown0xC"},
        {13, L"EcUnknown0xD"},
        {14, L"EcDoAsyncConnectEx"}
    };

std::map<int,std::wstring> drsuapiOpnums = {
        {0, L"DRSBind"},
        {1, L"DRSUnbind"},
        {2, L"DRSReplicaSync"},
        {3, L"DRSGetNCChanges"},
        {4, L"DRSUpdateRefs"},
        {5, L"DRSReplicaAdd"},
        {6, L"DRSReplicaDel"},
        {7, L"DRSReplicaModify"},
        {8, L"DRSVerifyNames"},
        {9, L"DRSGetMemberships"},
        {10, L"DRSInterDomainMove"},
        {11, L"DRSGetNT4ChangeLog"},
        {12, L"DRSCrackNames"},
        {13, L"DRSWriteSPN"},
        {14, L"DRSRemoveDsServer"},
        {15, L"DRSRemoveDsDomain"},
        {16, L"DRSDomainControllerInfo"},
        {17, L"DRSAddEntry"},
        {18, L"DRSExecuteKCC"},
        {19, L"DRSGetReplInfo"},
        {20, L"DRSAddSidHistory"},
        {21, L"DRSGetMemberships2"},
        {22, L"DRSReplicaVerifyObjects"},
        {23, L"DRSGetObjectExistence"},
        {24, L"DRSQuerySitesByCost"},
        {25, L"IDL_DRSInitDemotion"},
        {26, L"IDL_DRSReplicaDemotion"},
        {27, L"IDL_DRSFinishDemotion"},
        {28, L"IDL_DRSAddCloneDC"},
        {29, L"IDL_DRSWriteNgcKey"},
        {30, L"IDL_DRSReadNgcKey"}
    };

std::map<int,std::wstring> winspipeOpnums = {
        {0, L"R_WinsRecordAction"},
        {1, L"R_WinsStatus"},
        {2, L"R_WinsTrigger"},
        {3, L"R_WinsDoStaticInit"},
        {4, L"R_WinsDoScavenging"},
        {5, L"R_WinsGetDbRecs"},
        {6, L"R_WinsTerm"},
        {7, L"R_WinsBackup"},
        {8, L"R_WinsDelDbRecs"},
        {9, L"R_WinsPullRange"},
        {10, L"R_WinsSetPriorityClass"},
        {11, L"R_WinsResetCounters"},
        {12, L"R_WinsWorkerThdUpd"},
        {13, L"R_WinsGetNameAndAdd"},
        {14, L"R_WinsGetBrowserNames_Old"},
        {15, L"R_WinsDeleteWins"},
        {16, L"R_WinsSetFlags"},
        {17, L"R_WinsGetBrowserNames"},
        {18, L"R_WinsGetDbRecsByName"},
        {19, L"R_WinsStatusNew"},
        {20, L"R_WinsStatusWHdl"},
        {21, L"R_WinsDoScavengingNew"}
    };

std::map<int,std::wstring> mgmtOpnums = {
        {0, L"inq_if_ids"},
        {1, L"inq_stats"},
        {2, L"is_server_listening"},
        {3, L"stop_server_listening"},
        {4, L"inq_princ_name"}
    };

std::map<int,std::wstring> authzrOpnums = {
        {0, L"AuthzrFreeContext"},
        {1, L"AuthzrInitializeContextFromSid"},
        {2, L"AuthrzInitializeCompoundContext"},
        {3, L"AuthrzAccessCheck"},
        {4, L"AuthrzGetInformationFromContext"},
        {5, L"AuthrzModifyClaims"},
        {6, L"AuthrzModifySids"}
    };

std::map<int,std::wstring> BitsPeerAuthOpnums = {
        {0, L"ExchangePublicKeys"}
    };

std::map<int,std::wstring> clusapiOpnums = {
        {0, L"ApiOpenCluster"},
        {1, L"ApiCloseCluster"},
        {2, L"ApiSetClusterName"},
        {3, L"ApiGetClusterName"},
        {4, L"ApiGetClusterVersion"},
        {5, L"ApiGetQuorumResource"},
        {6, L"ApiSetQuorumResource"},
        {7, L"ApiCreateEnum"},
        {8, L"ApiOpenResource"},
        {9, L"ApiCreateResource"},
        {10, L"ApiDeleteResource"},
        {11, L"ApiCloseResource"},
        {12, L"ApiGetResourceState"},
        {13, L"ApiSetResourceName"},
        {14, L"ApiGetResourceId"},
        {15, L"ApiGetResourceType"},
        {16, L"ApiFailResource"},
        {17, L"ApiOnlineResource"},
        {18, L"ApiOfflineResource"},
        {19, L"ApiAddResourceDependency"},
        {20, L"ApiRemoveResourceDependency"},
        {21, L"ApiCanResourceBeDependent"},
        {22, L"ApiCreateResEnum"},
        {23, L"ApiAddResourceNode"},
        {24, L"ApiRemoveResourceNode"},
        {25, L"ApiChangeResourceGroup"},
        {26, L"ApiCreateResourceType"},
        {27, L"ApiDeleteResourceType"},
        {28, L"ApiGetRootKey"},
        {29, L"ApiCreateKey"},
        {30, L"ApiOpenKey"},
        {31, L"ApiEnumKey"},
        {32, L"ApiSetValue"},
        {33, L"ApiDeleteValue"},
        {34, L"ApiQueryValue"},
        {35, L"ApiDeleteKey"},
        {36, L"ApiEnumValue"},
        {37, L"ApiCloseKey"},
        {38, L"ApiQueryInfoKey"},
        {39, L"ApiSetKeySecurity"},
        {40, L"ApiGetKeySecurity"},
        {41, L"ApiOpenGroup"},
        {42, L"ApiCreateGroup"},
        {43, L"ApiDeleteGroup"},
        {44, L"ApiCloseGroup"},
        {45, L"ApiGetGroupState"},
        {46, L"ApiSetGroupName"},
        {47, L"ApiGetGroupId"},
        {48, L"ApiGetNodeId"},
        {49, L"ApiOnlineGroup"},
        {50, L"ApiOfflineGroup"},
        {51, L"ApiMoveGroup"},
        {52, L"ApiMoveGroupToNode"},
        {53, L"ApiCreateGroupResourceEnum"},
        {54, L"ApiSetGroupNodeList"},
        {55, L"ApiCreateNotify"},
        {56, L"ApiCloseNotify"},
        {57, L"ApiAddNotifyCluster"},
        {58, L"ApiAddNotifyNode"},
        {59, L"ApiAddNotifyGroup"},
        {60, L"ApiAddNotifyResource"},
        {61, L"ApiAddNotifyKey"},
        {62, L"ApiReAddNotifyNode"},
        {63, L"ApiReAddNotifyGroup"},
        {64, L"ApiReAddNotifyResource"},
        {65, L"ApiGetNotify"},
        {66, L"ApiOpenNode"},
        {67, L"ApiCloseNode"},
        {68, L"ApiGetNodeState"},
        {69, L"ApiPauseNode"},
        {70, L"ApiResumeNode"},
        {71, L"ApiEvictNode"},
        {72, L"ApiNodeResourceControl"},
        {73, L"ApiResourceControl"},
        {74, L"ApiNodeResourceTypeControl"},
        {75, L"ApiResourceTypeControl"},
        {76, L"ApiNodeGroupControl"},
        {77, L"ApiGroupControl"},
        {78, L"ApiNodeNodeControl"},
        {79, L"ApiNodeControl"},
        {80, L"Opnum80NotUsedOnWire"},
        {81, L"ApiOpenNetwork"},
        {82, L"ApiCloseNetwork"},
        {83, L"ApiGetNetworkState"},
        {84, L"ApiSetNetworkName"},
        {85, L"ApiCreateNetworkEnum"},
        {86, L"ApiGetNetworkId"},
        {87, L"ApiSetNetworkPriorityOrder"},
        {88, L"ApiNodeNetworkControl"},
        {89, L"ApiNetworkControl"},
        {90, L"ApiAddNotifyNetwork"},
        {91, L"ApiReAddNotifyNetwork"},
        {92, L"ApiOpenNetInterface"},
        {93, L"ApiCloseNetInterface"},
        {94, L"ApiGetNetInterfaceState"},
        {95, L"ApiGetNetInterface"},
        {96, L"ApiGetNetInterfaceId"},
        {97, L"ApiNodeNetInterfaceControl"},
        {98, L"ApiNetInterfaceControl"},
        {99, L"ApiAddNotifyNetInterface"},
        {100, L"ApiReAddNotifyNetInterface"},
        {101, L"ApiCreateNodeEnum"},
        {102, L"ApiGetClusterVersion2"},
        {103, L"ApiCreateResTypeEnum"},
        {104, L"ApiBackupClusterDatabase"},
        {105, L"ApiNodeClusterControl"},
        {106, L"ApiClusterControl"},
        {107, L"ApiUnblockGetNotifyCall"},
        {108, L"ApiSetServiceAccountPassword"},
        {109, L"ApiSetResourceDependencyExpression"},
        {110, L"ApiGetResourceDependencyExpression"},
        {112, L"ApiGetResourceNetworkName"},
        {113, L"ApiExecuteBatch"},
        {114, L"ApiCreateBatchPort"},
        {115, L"ApiGetBatchNotification"},
        {116, L"ApiCloseBatchPort"},
        {117, L"ApiOpenClusterEx"},
        {118, L"ApiOpenNodeEx"},
        {119, L"ApiOpenGroupEx"},
        {120, L"ApiOpenResourceEx"},
        {121, L"ApiOpenNetworkEx"},
        {122, L"ApiOpenNetInterfaceEx"},
        {123, L"ApiChangeCsvState"},
        {124, L"ApiCreateNodeEnumEx"},
        {125, L"ApiCreateEnumEx"},
        {126, L"ApiPauseNodeEx"},
        {127, L"ApiPauseNodeWithDrainTarget"},
        {128, L"ApiResumeNodeEx"},
        {129, L"ApiCreateGroupEx"},
        {130, L"ApiOnlineGroupEx"},
        {131, L"ApiOfflineGroupEx"},
        {132, L"ApiMoveGroupEx"},
        {133, L"ApiMoveGroupToNodeEx"},
        {134, L"ApiCancelClusterGroupOperation"},
        {135, L"ApiOnlineResourceEx"},
        {136, L"ApiOfflineResourceEx"},
        {137, L"ApiCreateNotifyV2"},
        {138, L"ApiAddNotifyV2"},
        {139, L"ApiGetNotifyV2"},
        {143, L"ApiCreateGroupEnum"},
        {144, L"ApiCreateResourceEnum"},
        {145, L"ApiExecuteReadBatch"},
        {146, L"ApiRestartResource"},
        {147, L"ApiGetNotifyAsync"},
        {155, L"ApiAddNotifyResourceTypeV2"},
        {157, L"ApiExecuteReadBatchEx"},
        {163, L"ApiCreateGroupSet"},
        {164, L"ApiOpenGroupSet"},
        {165, L"ApiCloseGroupSet"},
        {166, L"ApiDeleteGroupSet"},
        {167, L"ApiAddGroupToGroupSet"},
        {168, L"ApiRemoveGroupFromGroupSet"},
        {169, L"ApiMoveGroupToGroupSet"},
        {171, L"ApiAddGroupSetDependency"},
        {172, L"ApiAddGroupToGroupSetDependency"},
        {173, L"ApiNodeGroupSetControl"},
        {174, L"ApiGroupSetControl"},
        {175, L"ApiSetGroupDependencyExpression"},
        {176, L"ApiRemoveClusterGroupDependency"},
        {177, L"ApiSetGroupSetDependencyExpression"},
        {178, L"ApiRemoveGroupSetDependency"},
        {179, L"ApiRemoveClusterGroupToGroupSetDependency"},
        {180, L"ApiCreateGroupSetEnum"},
        {181, L"ApiCreateNetInterfaceEnum"},
        {182, L"ApiChangeCsvStateEx"},
        {183, L"ApiAddGroupToGroupSetEx"},
        {184, L"ApiChangeResourceGroupEx"}
    };

std::map<int,std::wstring> dhcpsrvOpnums = {
        {0, L"R_DhcpCreateSubnet"},
        {1, L"R_DhcpSetSubnetInfo"},
        {2, L"R_DhcpGetSubnetInfo"},
        {3, L"R_DhcpEnumSubnets"},
        {4, L"R_DhcpAddSubnetElement"},
        {5, L"R_DhcpEnumSubnetElements"},
        {6, L"R_DhcpRemoveSubnetElement"},
        {7, L"R_DhcpDeleteSubnet"},
        {8, L"R_DhcpCreateOption"},
        {9, L"R_DhcpSetOptionInfo"},
        {10, L"R_DhcpGetOptionInfo"},
        {11, L"R_DhcpRemoveOption"},
        {12, L"R_DhcpSetOptionValue"},
        {13, L"R_DhcpGetOptionValue"},
        {14, L"R_DhcpEnumOptionValues"},
        {15, L"R_DhcpRemoveOptionValue"},
        {16, L"R_DhcpCreateClientInfo"},
        {17, L"R_DhcpSetClientInfo"},
        {18, L"R_DhcpGetClientInfo"},
        {19, L"R_DhcpDeleteClientInfo"},
        {20, L"R_DhcpEnumSubnetClients"},
        {21, L"R_DhcpGetClientOptions"},
        {22, L"R_DhcpGetMibInfo"},
        {23, L"R_DhcpEnumOptions"},
        {24, L"R_DhcpSetOptionValues"},
        {25, L"R_DhcpServerSetConfig"},
        {26, L"R_DhcpServerGetConfig"},
        {27, L"R_DhcpScanDatabase"},
        {28, L"R_DhcpGetVersion"},
        {29, L"R_DhcpAddSubnetElementV4"},
        {30, L"R_DhcpEnumSubnetElementsV4"},
        {31, L"R_DhcpRemoveSubnetElementV4"},
        {32, L"R_DhcpCreateClientInfoV4"},
        {33, L"R_DhcpSetClientInfoV4"},
        {34, L"R_DhcpGetClientInfoV4"},
        {35, L"R_DhcpEnumSubnetClientsV4"},
        {36, L"R_DhcpSetSuperScopeV4"},
        {37, L"R_DhcpGetSuperScopeInfoV4"},
        {38, L"R_DhcpDeleteSuperScopeV4"},
        {39, L"R_DhcpServerSetConfigV4"},
        {40, L"R_DhcpServerGetConfigV4"},
        {41, L"R_DhcpServerSetConfigVQ"},
        {42, L"R_DhcpServerGetConfigVQ"},
        {43, L"R_DhcpGetMibInfoVQ"},
        {44, L"R_DhcpCreateClientInfoVQ"},
        {45, L"R_DhcpSetClientInfoVQ"},
        {46, L"R_DhcpGetClientInfoVQ"},
        {47, L"R_DhcpEnumSubnetClientsVQ"},
        {48, L"R_DhcpCreateSubnetVQ"},
        {49, L"R_DhcpGetSubnetInfoVQ"},
        {50, L"R_DhcpSetSubnetInfoVQ"}
    };

std::map<int,std::wstring> dhcpsrv2Opnums = {
        {0, L"R_DhcpEnumSubnetClientsV5"},
        {1, L"R_DhcpSetMScopeInfo"},
        {2, L"R_DhcpGetMScopeInfo"},
        {3, L"R_DhcpEnumMScopes"},
        {4, L"R_DhcpAddMScopeElement"},
        {5, L"R_DhcpEnumMScopeElements"},
        {6, L"R_DhcpRemoveMScopeElement"},
        {7, L"R_DhcpDeleteMScope"},
        {8, L"R_DhcpScanMDatabase"},
        {9, L"R_DhcpCreateMClientInfo"},
        {10, L"R_DhcpSetMClientInfo"},
        {11, L"R_DhcpGetMClientInfo"},
        {12, L"R_DhcpDeleteMClientInfo"},
        {13, L"R_DhcpEnumMScopeClients"},
        {14, L"R_DhcpCreateOptionV5"},
        {15, L"R_DhcpSetOptionInfoV5"},
        {16, L"R_DhcpGetOptionInfoV5"},
        {17, L"R_DhcpEnumOptionsV5"},
        {18, L"R_DhcpRemoveOptionV5"},
        {19, L"R_DhcpSetOptionValueV5"},
        {20, L"R_DhcpSetOptionValuesV5"},
        {21, L"R_DhcpGetOptionValueV5"},
        {22, L"R_DhcpEnumOptionValuesV5"},
        {23, L"R_DhcpRemoveOptionValueV5"},
        {24, L"R_DhcpCreateClass"},
        {25, L"R_DhcpModifyClass"},
        {26, L"R_DhcpDeleteClass"},
        {27, L"R_DhcpGetClassInfo"},
        {28, L"R_DhcpEnumClasses"},
        {29, L"R_DhcpGetAllOptions"},
        {30, L"R_DhcpGetAllOptionValues"},
        {31, L"R_DhcpGetMCastMibInfo"},
        {32, L"R_DhcpAuditLogSetParams"},
        {33, L"R_DhcpAuditLogGetParams"},
        {34, L"R_DhcpServerQueryAttribute"},
        {35, L"R_DhcpServerQueryAttributes"},
        {36, L"R_DhcpServerRedoAuthorization"},
        {37, L"R_DhcpAddSubnetElementV5"},
        {38, L"R_DhcpEnumSubnetElementsV5"},
        {39, L"R_DhcpRemoveSubnetElementV5"},
        {40, L"R_DhcpGetServerBindingInfo"},
        {41, L"R_DhcpSetServerBindingInfo"},
        {42, L"R_DhcpQueryDnsRegCredentials"},
        {43, L"R_DhcpSetDnsRegCredentials"},
        {44, L"R_DhcpBackupDatabase"},
        {45, L"R_DhcpRestoreDatabase"},
        {46, L"R_DhcpGetServerSpecificStrings"},
        {47, L"R_DhcpCreateOptionV6"},
        {48, L"R_DhcpSetOptionInfoV6"},
        {49, L"R_DhcpGetOptionInfoV6"},
        {50, L"R_DhcpEnumOptionsV6"},
        {51, L"R_DhcpRemoveOptionV6"},
        {52, L"R_DhcpSetOptionValueV6"},
        {53, L"R_DhcpEnumOptionValuesV6"},
        {54, L"R_DhcpRemoveOptionValueV6"},
        {55, L"R_DhcpGetAllOptionsV6"},
        {56, L"R_DhcpGetAllOptionValuesV6"},
        {57, L"R_DhcpCreateSubnetV6"},
        {58, L"R_DhcpEnumSubnetsV6"},
        {59, L"R_DhcpAddSubnetElementV6"},
        {60, L"R_DhcpEnumSubnetElementsV6"},
        {61, L"R_DhcpRemoveSubnetElementV6"},
        {62, L"R_DhcpDeleteSubnetV6"},
        {63, L"R_DhcpGetSubnetInfoV6"},
        {64, L"R_DhcpEnumSubnetClientsV6"},
        {65, L"R_DhcpServerSetConfigV6"},
        {66, L"R_DhcpServerGetConfigV6"},
        {67, L"R_DhcpGetMibInfoV6"},
        {69, L"R_DhcpGetServerBindingInfoV6"},
        {70, L"R_DhcpSetServerBindingInfoV6"},
        {71, L"R_DhcpSetClientInfoV6"},
        {72, L"R_DhcpGetClientInfoV6"},
        {73, L"R_DhcpDeleteClientInfoV6"},
        {74, L"R_DhcpCreateClassV6"},
        {75, L"R_DhcpModifyClassV6"},
        {76, L"R_DhcpDeleteClassV6"},
        {77, L"R_DhcpEnumClassesV6"},
        {78, L"R_DhcpGetOptionValueV6"},
        {79, L"R_DhcpSetSubnetDelayOffer"},
        {80, L"R_DhcpGetSubnetDelayOffer"},
        {81, L"R_DhcpGetMibInfoV5"},
        {82, L"R_DhcpAddFilterV4"},
        {83, L"R_DhcpDeleteFilterV4"},
        {84, L"R_DhcpSetFilterV4"},
        {85, L"R_DhcpGetFilterV4"},
        {86, L"R_DhcpEnumFilterV4"},
        {87, L"R_DhcpSetDnsRegCredentialsV5"},
        {88, L"R_DhcpEnumSubnetClientsFilterStatusInfo"},
        {89, L"R_DhcpV4FailoverCreateRelationship"},
        {90, L"R_DhcpV4FailoverSetRelationship"},
        {91, L"R_DhcpV4FailoverDeleteRelationship"},
        {92, L"R_DhcpV4FailoverGetRelationship"},
        {93, L"R_DhcpV4FailoverEnumRelationship"},
        {94, L"R_DhcpV4FailoverAddScopeToRelationship"},
        {95, L"R_DhcpV4FailoverDeleteScopeFromRelationship"},
        {96, L"R_DhcpV4FailoverGetScopeRelationship"},
        {97, L"R_DhcpV4FailoverGetScopeStatistics"},
        {98, L"R_DhcpV4FailoverGetClientInfo"},
        {99, L"R_DhcpV4FailoverGetSystemTime"},
        {100, L"R_DhcpV4FailoverTriggerAddrAllocation"},
        {101, L"R_DhcpV4SetOptionValue"},
        {102, L"R_DhcpV4SetOptionValues"},
        {103, L"R_DhcpV4GetOptionValue"},
        {104, L"R_DhcpV4RemoveOptionValue"},
        {105, L"R_DhcpV4GetAllOptionValues"},
        {106, L"R_DhcpV4QueryPolicyEnforcement"},
        {107, L"R_DhcpSetPolicyEnforcement"},
        {108, L"R_DhcpV4CreatePolicy"},
        {109, L"R_DhcpV4GetPolicy"},
        {110, L"R_DhcpV4SetPolicy"},
        {111, L"R_DhcpV4DeletePolicy"},
        {112, L"R_DhcpV4EnumPolicies"},
        {113, L"R_DhcpV4AddPolicyRange"},
        {114, L"R_DhcpV4RemovePolicyRange"},
        {115, L"R_DhcpV4EnumSubnetClients"},
        {116, L"R_DhcpV6SetStatelessStoreParams"},
        {117, L"R_DhcpV6GetStatelessStoreParams"},
        {118, L"R_DhcpV6GetStatelessStatistics"},
        {119, L"R_DhcpV4EnumSubnetReservations"},
        {120, L"R_DhcpV4GetFreeIPAddress"},
        {121, L"R_DhcpV6GetFreeIPAddress"},
        {122, L"R_DhcpV4CreateClientInfo"},
        {123, L"R_DhcpV4GetClientInfo"},
        {124, L"R_DhcpV6CreateClientInfo"},
        {125, L"R_DhcpV4FailoverGetAddressStatus"},
        {126, L"R_DhcpV4CreatePolicyEx"},
        {127, L"R_DhcpV4GetPolicyEx"},
        {128, L"R_DhcpV4SetPolicyEx"},
        {129, L"R_DhcpV4EnumPoliciesEx"},
        {130, L"R_DhcpV4EnumSubnetClientsEx"},
        {131, L"R_DhcpV4CreateClientInfoEx"},
        {132, L"R_DhcpV4GetClientInfoEx"}
    };

std::map<int,std::wstring> dsaopOpnums = {
        {0, L"IDL_DSAPrepareScript"},
        {1, L"IDL_DSAExecuteScript"}
    };

std::map<int,std::wstring> dscommOpnums = {
        {0, L"S_DSCreateObject"},
        {1, L"S_DSDeleteObject"},
        {2, L"S_DSGetProps"},
        {3, L"S_DSSetProps"},
        {4, L"S_DSGetObjectSecurity"},
        {5, L"S_DSSetObjectSecurity"},
        {6, L"S_DSLookupBegin"},
        {7, L"S_DSLookupNext"},
        {8, L"S_DSLookupEnd"},
        {9, L"Opnum9NotUsedOnWire"},
        {10, L"S_DSDeleteObjectGuid"},
        {11, L"S_DSGetPropsGuid"},
        {12, L"S_DSSetPropsGuid"},
        {13, L"S_DSGetObjectSecurityGuid"},
        {14, L"S_DSSetObjectSecurityGuid"},
        {15, L"Opnum15NotUsedOnWire"},
        {16, L"Opnum16NotUsedOnWire"},
        {17, L"Opnum17NotUsedOnWire"},
        {18, L"Opnum18NotUsedOnWire"},
        {19, L"S_DSQMSetMachineProperties"},
        {20, L"S_DSCreateServersCache"},
        {21, L"S_DSQMGetObjectSecurity"},
        {22, L"S_DSValidateServer"},
        {23, L"S_DSCloseServerHandle"},
        {24, L"Opnum24NotUsedOnWire"},
        {25, L"Opnum25NotUsedOnWire"},
        {26, L"Opnum26NotUsedOnWire"},
        {27, L"S_DSGetServerPort"}
    };

std::map<int,std::wstring> dscomm2Opnums = {
        {0, L"S_DSGetComputerSites"},
        {1, L"S_DSGetPropsEx"},
        {2, L"S_DSGetPropsGuidEx"},
        {3, L"S_DSBeginDeleteNotification"},
        {4, L"S_DSNotifyDelete"},
        {5, L"S_DSEndDeleteNotification"},
        {6, L"S_DSIsServerGC"},
        {7, L"Opnum7NotUsedOnWire"},
        {8, L"S_DSGetGCListInDomain"}
    };

std::map<int,std::wstring> efsrpcOpnums = {
        {0, L"EfsRpcOpenFileRaw"},
        {1, L"EfsRpcReadFileRaw"},
        {2, L"EfsRpcWriteFileRaw"},
        {3, L"EfsRpcCloseRaw"},
        {4, L"EfsRpcEncryptFileSrv"},
        {5, L"EfsDecryptFileSrv"},
        {6, L"EfsRpcQueryUsersOnFile"},
        {7, L"EfsRpcQueryRecoveryAgents"},
        {8, L"EfsRpcRemoveUsersFromFile"},
        {9, L"EfsRpcAddUsersToFile"},
        {10, L"Opnum10NotUsedOnWire"},
        {11, L"EfsRpcNotSupported"},
        {12, L"EfsRpcFileKeyInfo"},
        {13, L"EfsRpcDuplicateEncryptionInfoFile"},
        {14, L"Opnum14NotUsedOnWire"},
        {15, L"EfsRpcAddUsersToFileEx"},
        {16, L"EfsRpcFileKeyInfoEx"},
        {17, L"Opnum17NotUsedOnWire"},
        {18, L"EfsRpcGetEncryptedFileMetadata"},
        {19, L"EfsRpcSetEncryptedFileMetadata"},
        {20, L"EfsRpcFlushEfsCache"},
        {21, L"EfsRpcEncryptFileExServ"},
        {22, L"EfsRpcQueryProtectors"},
        {23, L"Opnum23NotUsedOnWire"},
        {24, L"Opnum24NotUsedOnWire"},
        {25, L"Opnum25NotUsedOnWire"},
        {26, L"Opnum26NotUsedOnWire"},
        {27, L"Opnum27NotUsedOnWire"},
        {28, L"Opnum28NotUsedOnWire"},
        {29, L"Opnum29NotUsedOnWire"},
        {30, L"Opnum30NotUsedOnWire"},
        {31, L"Opnum31NotUsedOnWire"},
        {32, L"Opnum32NotUsedOnWire"},
        {33, L"Opnum33NotUsedOnWire"},
        {34, L"Opnum34NotUsedOnWire"},
        {35, L"Opnum35NotUsedOnWire"},
        {36, L"Opnum36NotUsedOnWire"},
        {37, L"Opnum37NotUsedOnWire"},
        {38, L"Opnum38NotUsedOnWire"},
        {39, L"Opnum39NotUsedOnWire"},
        {40, L"Opnum40NotUsedOnWire"},
        {41, L"Opnum41NotUsedOnWire"},
        {42, L"Opnum42NotUsedOnWire"},
        {43, L"Opnum43NotUsedOnWire"},
        {44, L"Opnum44NotUsedOnWire"}
    };

std::map<int,std::wstring> efsrpc2Opnums = {
        {0, L"EfsRpcOpenFileRaw"},
        {1, L"EfsRpcReadFileRaw"},
        {2, L"EfsRpcWriteFileRaw"},
        {3, L"EfsRpcCloseRaw"},
        {4, L"EfsRpcEncryptFileSrv"},
        {5, L"EfsDecryptFileSrv"},
        {6, L"EfsRpcQueryUsersOnFile"},
        {7, L"EfsRpcQueryRecoveryAgents"},
        {8, L"EfsRpcRemoveUsersFromFile"},
        {9, L"EfsRpcAddUsersToFile"},
        {10, L"Opnum10NotUsedOnWire"},
        {11, L"EfsRpcNotSupported"},
        {12, L"EfsRpcFileKeyInfo"},
        {13, L"EfsRpcDuplicateEncryptionInfoFile"},
        {14, L"Opnum14NotUsedOnWire"},
        {15, L"EfsRpcAddUsersToFileEx"},
        {16, L"EfsRpcFileKeyInfoEx"},
        {17, L"Opnum17NotUsedOnWire"},
        {18, L"EfsRpcGetEncryptedFileMetadata"},
        {19, L"EfsRpcSetEncryptedFileMetadata"},
        {20, L"EfsRpcFlushEfsCache"},
        {21, L"EfsRpcEncryptFileExServ"},
        {22, L"EfsRpcQueryProtectors"},
        {23, L"Opnum23NotUsedOnWire"},
        {24, L"Opnum24NotUsedOnWire"},
        {25, L"Opnum25NotUsedOnWire"},
        {26, L"Opnum26NotUsedOnWire"},
        {27, L"Opnum27NotUsedOnWire"},
        {28, L"Opnum28NotUsedOnWire"},
        {29, L"Opnum29NotUsedOnWire"},
        {30, L"Opnum30NotUsedOnWire"},
        {31, L"Opnum31NotUsedOnWire"},
        {32, L"Opnum32NotUsedOnWire"},
        {33, L"Opnum33NotUsedOnWire"},
        {34, L"Opnum34NotUsedOnWire"},
        {35, L"Opnum35NotUsedOnWire"},
        {36, L"Opnum36NotUsedOnWire"},
        {37, L"Opnum37NotUsedOnWire"},
        {38, L"Opnum38NotUsedOnWire"},
        {39, L"Opnum39NotUsedOnWire"},
        {40, L"Opnum40NotUsedOnWire"},
        {41, L"Opnum41NotUsedOnWire"},
        {42, L"Opnum42NotUsedOnWire"},
        {43, L"Opnum43NotUsedOnWire"},
        {44, L"Opnum44NotUsedOnWire"}
    };

std::map<int,std::wstring> FileServerVssAgentOpnums = {
        {0, L"GetSupportedVersion"},
        {1, L"SetContext"},
        {2, L"StartShadowCopySet"},
        {3, L"AddToShadowCopySet"},
        {4, L"CommitShadowCopySet"},
        {5, L"ExposeShadowCopySet"},
        {6, L"RecoveryCompleteShadowCopySet"},
        {7, L"AbortShadowCopySet"},
        {8, L"IsPathSupported"},
        {9, L"IsPathShadowCopied"},
        {10, L"GetShareMapping"},
        {11, L"DeleteShareMapping"},
        {12, L"PrepareShadowCopy"}
    };

std::map<int,std::wstring> FrsTransportOpnums = {
        {0, L"CheckConnectivity"},
        {1, L"EstablishConnection"},
        {2, L"EstablishSession"},
        {3, L"RequestUpdates"},
        {4, L"RequestVersionVector"},
        {5, L"AsyncPoll"},
        {6, L"RequestRecords"},
        {7, L"UpdateCancel"},
        {8, L"RawGetFileData"},
        {9, L"RdcGetSignatures"},
        {10, L"RdcPushSourceNeeds"},
        {11, L"RdcGetFileData"},
        {12, L"RdcClose"},
        {13, L"InitializeFileTransferAsync"},
        {14, L"Opnum14NotUsedOnWire"},
        {15, L"RawGetFileDataAsync"},
        {16, L"RdcGetFileDataAsync"},
        {17, L"RdcFileDataTransferKeepAlive"}
    };

std::map<int,std::wstring> IADProxyOpnums = {
        {3, L"CreateObject"},
        {4, L"DeleteObject"},
        {5, L"ModifyObject"}
    };

std::map<int,std::wstring> IADProxy2Opnums = {
        {6, L"CreateObject"},
        {7, L"DeleteObject"},
        {8, L"ModifyObject"}
    };

std::map<int,std::wstring> ICertAdminDOpnums = {
        {3, L"SetExtension"},
        {4, L"SetAttributes"},
        {5, L"ResubmitRequest"},
        {6, L"DenyRequest"},
        {7, L"IsValidCertificate"},
        {8, L"PublishCRL"},
        {9, L"GetCRL"},
        {10, L"RevokeCertificate"},
        {11, L"EnumViewColumn"},
        {12, L"GetViewDefaultColumnSet"},
        {13, L"EnumAttributesOrExtensions"},
        {14, L"OpenView"},
        {15, L"EnumView"},
        {16, L"CloseView"},
        {17, L"ServerControl"},
        {18, L"Ping"},
        {19, L"GetServerState"},
        {20, L"BackupPrepare"},
        {21, L"BackupEnd"},
        {22, L"BackupGetAttachmentInformation"},
        {23, L"BackupGetBackupLogs"},
        {24, L"BackupOpenFile"},
        {25, L"BackupReadFile"},
        {26, L"BackupCloseFile"},
        {27, L"BackupTruncateLogs"},
        {28, L"ImportCertificate"},
        {29, L"BackupGetDynamicFiles"},
        {30, L"RestoreGetDatabaseLocations"}
    };

std::map<int,std::wstring> ICertAdminD2Opnums = {
        {31, L"PublishCRLs"},
        {32, L"GetCAProperty"},
        {33, L"SetCAProperty"},
        {34, L"GetCAPropertyInfo"},
        {35, L"EnumViewColumnTable"},
        {36, L"GetCASecurity"},
        {37, L"SetCASecurity"},
        {38, L"Ping2"},
        {39, L"GetArchivedKey"},
        {40, L"GetAuditFilter"},
        {41, L"SetAuditFilter"},
        {42, L"GetOfficerRights"},
        {43, L"SetOfficerRights"},
        {44, L"GetConfigEntry"},
        {45, L"SetConfigEntry"},
        {46, L"ImportKey"},
        {47, L"GetMyRoles"},
        {48, L"DeleteRow"}
    };

std::map<int,std::wstring> ICertRequestDOpnums = {
        {3, L"Request"},
        {4, L"GetCACert"},
        {5, L"Ping"}
    };

std::map<int,std::wstring> ICertRequestD2Opnums = {
        {3, L"Request"},
        {4, L"GetCACert"},
        {5, L"Ping"},
        {6, L"Request2"},
        {7, L"GetCAProperty"},
        {8, L"GetCAPropertyInfo"},
        {9, L"Ping2"}
    };

std::map<int,std::wstring> IDispatchOpnums = {
        {3, L"GetTypeInfoCount"},
        {4, L"GetTypeInfo"},
        {5, L"GetIDsOfNames"},
        {6, L"Invoke"}
    };

std::map<int,std::wstring> ITypeInfoOpnums = {
        {3, L"GetTypeAttr"},
        {4, L"GetTypeComp"},
        {5, L"GetFuncDesc"},
        {6, L"GetVarDesc"},
        {7, L"GetNames"},
        {8, L"GetRefTypeOfImplType"},
        {9, L"GetImplTypeFlags"},
        {12, L"GetDocumentation"},
        {13, L"GetDllEntry"},
        {14, L"GetRefTypeInfo"},
        {16, L"CreateInstance"},
        {17, L"GetMops"},
        {18, L"GetContainingTypeLib"}
    };

std::map<int,std::wstring> IDMNotifyOpnums = {
        {3, L"ObjectsChanged"}
    };

std::map<int,std::wstring> IDMRemoteServerOpnums = {
        {3, L"CreateRemoteObject"}
    };

std::map<int,std::wstring> IEnumWbemClassObjectOpnums = {
        {3, L"Reset"},
        {4, L"Next"},
        {5, L"NextAsync"},
        {6, L"Clone"},
        {7, L"Skip"}
    };

std::map<int,std::wstring> IEventServiceOpnums = {
        {0, L"EvtRpcRegisterRemoteSubscription"},
        {1, L"EvtRpcRemoteSubscriptionNextAsync"},
        {2, L"EvtRpcRemoteSubscriptionNext"},
        {3, L"EvtRpcRemoteSubscriptionWaitAsync"},
        {4, L"EvtRpcRegisterControllableOperation"},
        {5, L"EvtRpcRegisterLogQuery"},
        {6, L"EvtRpcClearLog"},
        {7, L"EvtRpcExportLog"},
        {8, L"EvtRpcLocalizeExportLog"},
        {9, L"EvtRpcMessageRender"},
        {10, L"EvtRpcMessageRenderDefault"},
        {11, L"EvtRpcQueryNext"},
        {12, L"EvtRpcQuerySeek"},
        {13, L"EvtRpcClose"},
        {14, L"EvtRpcCancel"},
        {15, L"EvtRpcAssertConfig"},
        {16, L"EvtRpcRetractConfig"},
        {17, L"EvtRpcOpenLogHandle"},
        {18, L"EvtRpcGetLogFileInfo"},
        {19, L"EvtRpcGetChannelList"},
        {20, L"EvtRpcGetChannelConfig"},
        {21, L"EvtRpcPutChannelConfig"},
        {22, L"EvtRpcGetPublisherList"},
        {23, L"EvtRpcGetPublisherListForChannel"},
        {24, L"EvtRpcGetPublisherMetadata"},
        {25, L"EvtRpcGetPublisherResourceMetadata"},
        {26, L"EvtRpcGetEventMetadataEnum"},
        {27, L"EvtRpcGetNextEventMetadata"},
        {28, L"EvtRpcGetClassicLogDisplayName"}
    };

std::map<int,std::wstring> IIISApplicationAdminOpnums = {
        {3, L"CreateApplication"},
        {4, L"DeleteApplication"},
        {5, L"CreateApplicationPool"},
        {6, L"DeleteApplicationPool"},
        {7, L"EnumerateApplicationsInPool"},
        {8, L"RecycleApplicationPool"},
        {9, L"GetProcessMode"}
    };

std::map<int,std::wstring> IIISCertObjOpnums = {
        {7, L"Opnum7NotUsedOnWire"},
        {8, L"Opnum8NotUsedOnWire"},
        {9, L"Opnum9NotUsedOnWire"},
        {10, L"InstanceName"},
        {11, L"Opnum11NotUsedOnWire"},
        {12, L"IsInstallRemote"},
        {13, L"Opnum13NotUsedOnWire"},
        {14, L"IsExportableRemote"},
        {15, L"Opnum15NotUsedOnWire"},
        {16, L"GetCertInfoRemote"},
        {17, L"Opnum17NotUsedOnWire"},
        {18, L"Opnum18NotUsedOnWire"},
        {19, L"Opnum19NotUsedOnWire"},
        {20, L"Opnum20NotUsedOnWire"},
        {21, L"Opnum21NotUsedOnWire"},
        {22, L"ImportFromBlob"},
        {23, L"ImportFromBlobGetHash"},
        {24, L"Opnum24NotUsedOnWire"},
        {25, L"ExportToBlob"}
    };

std::map<int,std::wstring> IIisServiceControlOpnums = {
        {7, L"Stop"},
        {8, L"Start"},
        {9, L"Reboot"},
        {10, L"Status"},
        {11, L"Kill"}
    };

std::map<int,std::wstring> IManagedObjectOpnums = {
        {3, L"GetSerializedBuffer"},
        {4, L"GetObjectIdentify"}
    };

std::map<int,std::wstring> IManageTelnetSessionsOpnums = {
        {7, L"GetTelnetSessions"},
        {8, L"TerminateSession"},
        {9, L"SendMsgToASession"}
    };

std::map<int,std::wstring> IMSAdminBase2WOpnums = {
        {34, L"BackupWithPasswrd"},
        {35, L"RestoreWithPasswrd"},
        {36, L"Export"},
        {37, L"Import"},
        {38, L"RestoreHistory"},
        {39, L"EnumHistory"}
    };

std::map<int,std::wstring> IMSAdminBase3WOpnums = {
        {40, L"GetChildPaths"}
    };

std::map<int,std::wstring> IMSAdminBaseWOpnums = {
        {3, L"AddKey"},
        {4, L"DeleteKey"},
        {5, L"DeleteChildKEys"},
        {6, L"EnumKeys"},
        {7, L"CopyKey"},
        {8, L"RenameKey"},
        {9, L"R_SetData"},
        {10, L"R_GetData"},
        {11, L"DeleteDate"},
        {12, L"R_EnumData"},
        {13, L"R_GetAllData"},
        {14, L"DeleteAllData"},
        {15, L"CopyData"},
        {16, L"GetDataPaths"},
        {17, L"OpenKey"},
        {18, L"CloseKey"},
        {19, L"ChangePermissions"},
        {20, L"SaveData"},
        {21, L"GetHandleInfo"},
        {22, L"GetSystemChangeNumber"},
        {23, L"GetDataSetNumber"},
        {24, L"SetLastChangeTime"},
        {25, L"GetLastChangeTime"},
        {26, L"R_KeyExchangePhase1"},
        {27, L"R_KeyExchangePhase2"},
        {28, L"Backup"},
        {29, L"Restore"},
        {30, L"EnumBackups"},
        {31, L"DeleteBackup"},
        {32, L"UnmarshalInterface"},
        {33, L"R_GetServerGuid"}
    };

std::map<int,std::wstring> inetinfoOpnums = {
        {0, L"R_InetInfoGetVersion"},
        {1, L"R_InetInfoGetAdminInformation"},
        {2, L"R_InsetInfoGetSites"},
        {3, L"R_InetInfoSetAdminInformation"},
        {4, L"R_InetInfoGetGlobalAdminInformation"},
        {5, L"R_InetInfoSetGlobalAdminInformation"},
        {6, L"R_InetInfoQueryStatistics"},
        {7, L"R_InetInfoClearStatistics"},
        {8, L"R_InetInfoFlushMemoryCache"},
        {9, L"R_InetInfoGetServerCapabilities"},
        {10, L"R_W3QueryStatistics2"},
        {11, L"R_W3ClearStatistics2"},
        {12, L"R_FtpQueryStatistics2"},
        {13, L"R_FtpClearStatistics2"},
        {14, L"R_IISDEnumerateUsers"},
        {15, L"R_IISDisconnectedUser"},
        {16, L"Opnum16NotUsedOnWire"},
        {17, L"Opnum17NotUsedOnWire"}
    };

std::map<int,std::wstring> IRemoteDispatchOpnums = {
        {7, L"RemoteDispatchAutoDone"},
        {8, L"RemoteDispatchNotAutoDone"}
    };

std::map<int,std::wstring> IRemUnknownOpnums = {
        {3, L"RemQueryInterface"},
        {4, L"RemAddRef"},
        {5, L"RemRelease"}
    };

std::map<int,std::wstring> IResourceManagerOpnums = {
        {7, L"RetrieveEventList"},
        {8, L"GetSystemAffinity"},
        {9, L"ImportXMLFiles"},
        {10, L"ExportXMLFiles"},
        {11, L"RestoreXMLFiles"},
        {12, L"GetDependencies"},
        {13, L"GetServiceList"},
        {14, L"GetllSAppPoolNames"},
        {15, L"GetServerName"},
        {16, L"GetCurrentMemory"}
    };

std::map<int,std::wstring> IResourceManager2Opnums = {
        {7, L"ExportObjects"},
        {8, L"GetImportConflicts"},
        {9, L"ImportXml"},
        {10, L"ExportXml"}
    };

std::map<int,std::wstring> ISDKeyOpnums = {
        {0, L"GetKey"}
    };

std::map<int,std::wstring> IServerHealthReportOpnums = {
        {3, L"GetReport"},
        {4, L"GetCompressedReport"},
        {5, L"GetRawReportEx"},
        {6, L"GetReferenceVersionVectors"},
        {7, L"Opnum7NotUsedOnWire"},
        {8, L"GetReferenceBacklogCounts"}
    };

std::map<int,std::wstring> IServerHealthReport2Opnums = {
        {9, L"GetReport"},
        {16, L"GetCompressedReport"}
    };

std::map<int,std::wstring> IServicedComponentInfoOpnums = {
        {3, L"GetComponentInfo"}
    };

std::map<int,std::wstring> ITpmVirtualSmartCardManagerOpnums = {
        {3, L"CreateVirtualSmartCard"},
        {4, L"DestroyVirtualSmartCard"}
    };

std::map<int,std::wstring> ITpmVirtualSmartCardManager2Opnums = {
        {5, L"CreateVirtualSmartCardWithPinPolicy"}
    };

std::map<int,std::wstring> ITpmVirtualSmartCardManager3Opnums = {
        {6, L"CreateVirtualSmartCardWithAttestation"}
    };

std::map<int,std::wstring> ITpmVirtualSmartCardManagerStatusCallbackOpnums = {
        {3, L"ReportProgress"},
        {4, L"ReportError"}
    };

std::map<int,std::wstring> IUnknownOpnums = {
        {0, L"Opnum0NotUsedOnWire"},
        {1, L"Opnum1NotUsedOnWire"},
        {2, L"Opnum2NotUsedOnWire"}
    };

std::map<int,std::wstring> IVolumeClientOpnums = {
        {3, L"EnumDisksEx"},
        {4, L"EnumDiskRegionsEx"},
        {5, L"CreatePartition"},
        {6, L"CreatePartitionAssignAndFormat"},
        {7, L"CreatePartitionAssignandFormatEx"},
        {8, L"DeletePartition"},
        {9, L"WriteSignature"},
        {10, L"MarkActivePartition"},
        {11, L"Eject"},
        {12, L"Opnum12NotUsedOnWire"},
        {13, L"FTEnumVolumes"},
        {14, L"FTEnumLogicalDiskMembers"},
        {15, L"FTDeleteVolume"},
        {16, L"FTBreakMirror"},
        {17, L"FTResyncMirror"},
        {18, L"FTRegenerateParityStripe"},
        {19, L"FTReplaceMirrorPartition"},
        {20, L"FTReplaceParityStripePartition"},
        {21, L"EnumDriveLetters"},
        {22, L"AssignDriveLetter"},
        {23, L"FreeDriveLetter"},
        {24, L"EnumLocalFileSystems"},
        {25, L"GetInstalledFileSystems"},
        {26, L"Format"},
        {27, L"Opnum27NotUsedOnWire"},
        {28, L"EnumVolumes"},
        {29, L"EnumVolumeMembers"},
        {30, L"CreateVolume"},
        {31, L"CreateVolumeAssignAndFormat"},
        {32, L"CreateVolumeAssignAndFormatEx"},
        {33, L"GetVolumeMountName"},
        {34, L"GrowVolume"},
        {35, L"DeleteVolume"},
        {36, L"AddMirror"},
        {37, L"RemoveMirror"},
        {38, L"SplitMirror"},
        {39, L"InitializeDiskEx"},
        {40, L"UninitializeDisk"},
        {41, L"ReConnectDisk"},
        {42, L"Opnum42NotUsedOnWire"},
        {43, L"ImportDiskGroup"},
        {44, L"DiskMergeQuery"},
        {45, L"DiskMerge"},
        {46, L"Opnum46NotUsedOnWire"},
        {47, L"ReAttachDisk"},
        {48, L"Opnum48NotUsedOnWire"},
        {49, L"Opnum49NotUsedOnWire"},
        {50, L"Opnum50NotUsedOnWire"},
        {51, L"ReplaceRaid5Column"},
        {52, L"RestartVolume"},
        {53, L"GetEncapsulateDiskInfoEx"},
        {54, L"EncapsulateDiskEx"},
        {55, L"QueryChangePartitionNumbers"},
        {56, L"DeletePartitionNumberInfoFromRegistry"},
        {57, L"SetDontShow"},
        {58, L"GetDontShow"},
        {59, L"Opnum59NotUsedOnWire"},
        {60, L"Opnum60NotUsedOnWire"},
        {61, L"Opnum61NotUsedOnWire"},
        {62, L"Opnum62NotUsedOnWire"},
        {63, L"Opnum63NotUsedOnWire"},
        {64, L"Opnum64NotUsedOnWire"},
        {65, L"Opnum65NotUsedOnWire"},
        {66, L"Opnum66NotUsedOnWire"},
        {67, L"EnumTasks"},
        {68, L"GetTaskDetail"},
        {69, L"AbortTask"},
        {70, L"HrGetErrorData"},
        {71, L"Initialize"},
        {72, L"Uninitialize"},
        {73, L"Refresh"},
        {74, L"RescanDisks"},
        {75, L"RefreshFileSys"},
        {76, L"SecureSystemPartition"},
        {77, L"ShutDownSystem"},
        {78, L"EnumAccessPath"},
        {79, L"EnumAccessPathForVolume"},
        {80, L"AddAccessPath"},
        {81, L"DeleteAccessPath"}
    };

std::map<int,std::wstring> IVolumeClient2Opnums = {
        {3, L"GetMaxAdjustedFreeSpace"}
    };

std::map<int,std::wstring> IVolumeClient3Opnums = {
        {3, L"EnumDisksEx"},
        {4, L"EnumDiskRegionsEx"},
        {5, L"CreatePartition"},
        {6, L"CreatePartitionAssignAndFormat"},
        {7, L"CreatePartitionAssignandFormatEx"},
        {8, L"DeletePartition"},
        {9, L"InitializeDiskStyle"},
        {10, L"MarkActivePartition"},
        {11, L"Eject"},
        {12, L"Opnum12NotUsedOnWire"},
        {13, L"FTEnumVolumes"},
        {14, L"FTEnumLogicalDiskMembers"},
        {15, L"FTDeleteVolume"},
        {16, L"FTBreakMirror"},
        {17, L"FTResyncMirror"},
        {18, L"FTRegenerateParityStripe"},
        {19, L"FTReplaceMirrorPartition"},
        {20, L"FTReplaceParityStripePartition"},
        {21, L"EnumDriveLetters"},
        {22, L"AssignDriveLetter"},
        {23, L"FreeDriveLetter"},
        {24, L"EnumLocalFileSystems"},
        {25, L"GetInstalledFileSystems"},
        {26, L"Format"},
        {27, L"EnumVolumes"},
        {28, L"EnumVolumeMembers"},
        {29, L"CreateVolume"},
        {30, L"CreateVolumeAssignAndFormat"},
        {31, L"CreateVolumeAssignAndFormatEx"},
        {32, L"GetVolumeMountName"},
        {33, L"GrowVolume"},
        {34, L"DeleteVolume"},
        {35, L"CreatePartitionsForVolume"},
        {36, L"DeletePartitionsForVolume"},
        {37, L"GetMaxAdjustedFreeSpace"},
        {38, L"AddMirror"},
        {39, L"RemoveMirror"},
        {40, L"SplitMirror"},
        {41, L"InitializeDiskEx"},
        {42, L"UninitializeDisk"},
        {43, L"ReConnectDisk"},
        {44, L"ImportDiskGroup"},
        {45, L"DiskMergeQuery"},
        {46, L"DiskMerge"},
        {47, L"ReAttachDisk"},
        {48, L"ReplaceRaid5Column"},
        {49, L"RestartVolume"},
        {50, L"GetEncapsulateDiskInfoEx"},
        {51, L"EncapsulateDiskEx"},
        {52, L"QueryChangePartitionNumbers"},
        {53, L"DeletePartitionNumberInfoFromRegistry"},
        {54, L"SetDontShow"},
        {55, L"GetDontShow"},
        {56, L"Opnum56NotUsedOnWire"},
        {57, L"Opnum57NotUsedOnWire"},
        {58, L"Opnum58NotUsedOnWire"},
        {59, L"Opnum59NotUsedOnWire"},
        {60, L"Opnum60NotUsedOnWire"},
        {61, L"Opnum61NotUsedOnWire"},
        {62, L"Opnum62NotUsedOnWire"},
        {63, L"Opnum63NotUsedOnWire"},
        {64, L"EnumTasks"},
        {65, L"GetTaskDetail"},
        {66, L"AbortTask"},
        {67, L"HrGetErrorData"},
        {68, L"Initialize"},
        {69, L"Uninitialize"},
        {70, L"Refresh"},
        {71, L"RescanDisks"},
        {72, L"RefreshFileSys"},
        {73, L"SecureSystemPartition"},
        {74, L"ShutDownSystem"},
        {75, L"EnumAccessPath"},
        {76, L"EnumAccessPathForVolume"},
        {77, L"AddAccessPath"},
        {78, L"DeleteAccessPath"}
    };

std::map<int,std::wstring> IVolumeClient4Opnums = {
        {3, L"RefreshEx"},
        {4, L"GetVolumeDeviceName"}
    };

std::map<int,std::wstring> IVssDifferentialSoftwareSnapshotMgmtOpnums = {
        {3, L"AddDiffArea"},
        {4, L"ChangeDiffAreaMaximizeSize"},
        {5, L"QueryVolumesSupportedForDiffAreas"},
        {6, L"QueryDiffAreasForVolume"},
        {7, L"QueryDiffAreaOnVolume"},
        {8, L"Opnum08NotUsedOnWire"}
    };

std::map<int,std::wstring> IVssEnumMgmtObjectOpnums = {
        {3, L"Next"},
        {4, L"Skip"},
        {5, L"Reset"},
        {6, L"Clone"}
    };

std::map<int,std::wstring> IVssEnumObjectOpnums = {
        {3, L"Next"},
        {4, L"Skip"},
        {5, L"Reset"},
        {6, L"Clone"}
    };

std::map<int,std::wstring> IVssSnapshotMgmtOpnums = {
        {3, L"GetProviderMgmtInterface"},
        {4, L"QueryVolumesSupportedForSnapshots"},
        {5, L"QuerySnapshotsByVolume"}
    };

std::map<int,std::wstring> IWamAdminOpnums = {
        {3, L"AppCreate"},
        {4, L"AppDelete"},
        {5, L"AppUnLoad"},
        {6, L"AppGetStatus"},
        {7, L"AppDeleteRecoverable"},
        {8, L"AppRecover"}
    };

std::map<int,std::wstring> IWamAdmin2Opnums = {
        {9, L"AppCreate2"}
    };

std::map<int,std::wstring> IWRMAccountingOpnums = {
        {7, L"CreateAccountingDb"},
        {8, L"GetAccountingMetadata"},
        {9, L"ExecuteAccountingQuery"},
        {10, L"GetRawAccountingData"},
        {11, L"GetNextAccountingDataBatch"},
        {12, L"DeleteAccountingData"},
        {13, L"DefragmentDB"},
        {14, L"CancelAccountingQuery"},
        {15, L"RegisterAccountingClient"},
        {16, L"DumpAccountingData"},
        {17, L"GetAccountingClients"},
        {18, L"SetAccountingClientStatus"},
        {19, L"CheckAccountingConnection"},
        {20, L"SetClientPermissions"}
    };

std::map<int,std::wstring> IWRMCalendarOpnums = {
        {7, L"GetCalendarInfo"},
        {8, L"CreateCalendar"},
        {9, L"ModifyCalendar"},
        {10, L"DeleteCalendar"},
        {11, L"RenameCalendar"},
        {12, L"ComputeEvents"},
        {13, L"GetScheduleInfo"},
        {14, L"CreateSchedule"},
        {15, L"ModifySchedule"},
        {16, L"DeleteSchedule"},
        {17, L"RenameSchedule"},
        {18, L"MoveBeforeCalendar"},
        {19, L"MoveAfterCalendar"},
        {20, L"GetServerTimeZone"}
    };

std::map<int,std::wstring> IWRMConfigOpnums = {
        {7, L"GetConfig"},
        {8, L"SetConfig"},
        {9, L"IsEnabled"},
        {10, L"EnableDisable"},
        {11, L"GetExclusionList"},
        {12, L"SetExclusionList"},
        {13, L"WSRMActivate"},
        {14, L"IsWSRMActivated"},
        {15, L"RestoreExclusionList"}
    };

std::map<int,std::wstring> IWRMMachineGroupOpnums = {
        {7, L"CreateMachineGroup"},
        {8, L"GetMachineGroupInfo"},
        {9, L"ModifyMachineGroup"},
        {10, L"DeleteMachineGroup"},
        {11, L"RenameMachineGroup"},
        {12, L"AddMachine"},
        {13, L"GetMachineInfo"},
        {14, L"ModifyMachineInfo"},
        {15, L"DeleteMachine"}
    };

std::map<int,std::wstring> IWRMPolicyOpnums = {
        {7, L"GetPolicyInfo"},
        {8, L"CreatePolicy"},
        {9, L"ModifyPolicy"},
        {10, L"DeletePolicy"},
        {11, L"RenameAllocationPolicy"},
        {12, L"MoveBefore"},
        {13, L"MoveAfter"},
        {14, L"SetCalDefaultPolicyName"},
        {15, L"GetCalDefaultPolicyName"},
        {16, L"GetProcessList"},
        {17, L"GetCurrentPolicy"},
        {18, L"SetCurrentPolicy"},
        {19, L"GetCurrentStateAndActivePolicyName"},
        {20, L"GetConditionalPolicy"},
        {21, L"SetConditionalPolicy"}
    };

std::map<int,std::wstring> IWRMProtocolOpnums = {
        {7, L"GetSupportedClient"}
    };

std::map<int,std::wstring> IWRMRemoteSessionMgmtOpnums = {
        {7, L"GetRemoteUserCategories"},
        {8, L"SetRemoteUserCategories"},
        {9, L"RefreshRemoteSessionWeights"}
    };

std::map<int,std::wstring> IWRMResourceGroupOpnums = {
        {7, L"GetResourceGroupInfo"},
        {8, L"ModifyResourceGroup"},
        {9, L"CreateResourceGroup"},
        {10, L"DeleteResourceGroup"},
        {11, L"RenameResourceGroup"}
    };

std::map<int,std::wstring> locatorOpnums = {
        {0, L"I_nsi_lookup_begin"},
        {1, L"I_nsi_lookup_done"},
        {2, L"I_nsi_lookup_next"},
        {3, L"I_nsi_entry_object_inq_next"},
        {4, L"I_nsi_ping_locator"},
        {5, L"I_nsi_entry_object_inq_done"},
        {6, L"I_nsi_entry_object_inq_begin"}
    };

std::map<int,std::wstring> lsacapOpnums = {
        {0, L"LsarGetAvailableCAPIDs"}
    };

std::map<int,std::wstring> NetEventForwarderOpnums = {
        {0, L"RpcNetEventOpenSession"},
        {1, L"RpcNetEventReceiveData"},
        {2, L"RpcNetEventCloseSession"}
    };

std::map<int,std::wstring> NtFrsApiOpnums = {
        {0, L"Opnum0NotUsedOnWire"},
        {1, L"Opnum1NotUsedOnWire"},
        {2, L"Opnum2NotUsedOnWire"},
        {3, L"Opnum3NotUsedOnWire"},
        {4, L"NtFrsApi_Rpc_Set_DsPollingIntervalW"},
        {5, L"NtFrsApi_Rpc_Get_DsPollingIntervalW"},
        {6, L"Opnum6NotUsedOnWire"},
        {7, L"NtFrsApi_Rpc_InfoW"},
        {8, L"NtFrsApi_Rpc_IsPathReplicated"},
        {9, L"NtFrsApi_Rpc_WriterCommand"},
        {10, L"NtFrsApi_Rpc_ForceReplication"}
    };

std::map<int,std::wstring> RCMListenerOpnums = {
        {0, L"RpcOpenListener"},
        {1, L"RpcCloseListener"},
        {2, L"RpcStopListener"},
        {3, L"RpcStartListener"},
        {4, L"RpcIsListening"}
    };

std::map<int,std::wstring> RCMPublicOpnums = {
        {0, L"RpcGetClientData"},
        {1, L"RpcGetConfigData"},
        {2, L"RpcGetProtocolStatus"},
        {3, L"RpcGetLastInputTime"},
        {4, L"RpcGetRemoteAddress"},
        {5, L"Opnum5NotUsedOnWire"},
        {6, L"Opnum6NotUsedOnWire"},
        {7, L"Opnum7NotUsedOnWire"},
        {8, L"RpcGetAllListeners"},
        {9, L"RpcGetSessionProtocolLastInputTime"},
        {10, L"RpcGetUserCertificates"},
        {11, L"RpcQuerySessionData"}
    };

std::map<int,std::wstring> RemoteFWOpnums = {
        {0, L"RRPC_FWOpenPolicyStore"},
        {1, L"RRPC_FWClosePolicyStore"},
        {2, L"RRPC_FWRestoreDefaults"},
        {3, L"RRPC_FWGetGlobalConfig"},
        {4, L"RRPC_FWSetGlobalConfig"},
        {5, L"RRPC_FWAddFirewallRule"},
        {6, L"RRPC_FWSetFirewallRule"},
        {7, L"RRPC_FWDeleteFirewallRule"},
        {8, L"RRPC_FWDeleteAllFirewallRules"},
        {9, L"RRPC_FWEnumFirewallRules"},
        {10, L"RRPC_FWGetConfig"},
        {11, L"RRPC_FWSetConfig"},
        {12, L"RRPC_FWAddConnectionSecurityRule"},
        {13, L"RRPC_FWSetConnectionSecurityRule"},
        {14, L"RRPC_FWDeleteConnectionSecurityRule"},
        {15, L"RRPC_FWEnumConnectionSecurityRules"},
        {16, L"RRPC_FWEnumConnectionSecurityRules"},
        {17, L"RRPC_FWAddAuthenticationSet"},
        {18, L"RRPC_FWSetAuthenticationSet"},
        {19, L"RRPC_FWDeleteAuthenticationSet"},
        {20, L"RRPC_FWDeleteAllAuthenticationSets"},
        {21, L"RRPC_FWEnumAuthenticationSets"},
        {22, L"RRPC_FWAddCryptoSet"},
        {23, L"RRPC_FWSetCryptoSet"},
        {24, L"RRPC_FWDeleteCryptoSet"},
        {25, L"RRPC_FWDeleteAllCryptoSets"},
        {26, L"RRPC_FWEnumCryptoSets"},
        {27, L"RRPC_FWEnumPhase1SAs"},
        {28, L"RRPC_FWEnumPhase2SAs"},
        {29, L"RRPC_FWDeletePhase1SAs"},
        {30, L"RRPC_FWDeletePhase2SAs"},
        {31, L"RRPC_FWEnumProducts"},
        {32, L"RRPC_FWAddMainModeRule"},
        {33, L"RRPC_FWSetMainModeRule"},
        {34, L"RRPC_FWDeleteMainModeRule"},
        {35, L"RRPC_FWDeleteAllMainModeRules"},
        {36, L"RRPC_FWEnumMainModeRules"},
        {37, L"RRPC_FWQueryFirewallRules"},
        {38, L"RRPC_FWQueryConnectionSecurityRules"},
        {39, L"RRPC_FWQueryMainModeRules"},
        {40, L"RRPC_FWQueryAuthenticationSets"},
        {41, L"RRPC_FWQueryCryptoSets"},
        {42, L"RRPC_FWEnumNetworks"},
        {43, L"RRPC_FWEnumAdapters"},
        {44, L"RRPC_FWGetGlobalConfig2_10"},
        {45, L"RRPC_FWGetConfig2_10"},
        {46, L"RRPC_FWAddFirewallRule2_10"},
        {47, L"RRPC_FWSetFirewallRule2_10"},
        {48, L"RRPC_FWEnumFirewallRules2_10"},
        {49, L"RRPC_FWAddConnectionSecurityRule2_10"},
        {50, L"RRPC_FWSetConnectionSecurityRule2_10"},
        {51, L"RRPC_FWEnumConnectionSecurityRules2_10"},
        {52, L"RRPC_FWAddAuthenticationSet2_10"},
        {53, L"RRPC_FWSetAuthenticationSet2_10"},
        {54, L"RRPC_FWEnumAuthenticationSets2_10"},
        {55, L"RRPC_FWAddCryptoSet2_10"},
        {56, L"RRPC_FWSetCryptoSet2_10"},
        {57, L"RRPC_FWEnumCryptoSets2_10"},
        {58, L"RRPC_FWAddConnectionSecurityRule2_20"},
        {59, L"RRPC_FWSetConnectionSecurityRule2_20"},
        {60, L"RRPC_FWEnumConnectionSecurityRules2_20"},
        {61, L"RRPC_FWQueryConnectionSecurityRules2_20"},
        {62, L"RRPC_FWAddAuthenticationSet2_20"},
        {63, L"RRPC_FWEnumAuthenticationSets2_20"},
        {64, L"RRPC_FWQueryAuthenticationSets2_20"},
        {65, L"RRPC_FWAddFirewallRule2_20"},
        {66, L"RRPC_FWSetFirewallRule2_20"},
        {67, L"RRPC_FWEnumFirewallRules2_20"},
        {69, L"RRPC_FWQueryFirewallRules2_20"},
        {70, L"RRPC_FWAddFirewallRule2_24"},
        {71, L"RRPC_FWSetFirewallRule2_24"},
        {72, L"RRPC_FWEnumFirewallRules2_24"},
        {73, L"RRPC_FWQueryFirewallRules2_24"},
        {74, L"RRPC_FWAddFirewallRule2_25"},
        {75, L"RRPC_FWSetFirewallRule2_25"},
        {76, L"RRPC_FWEnumFirewallRules2_25"},
        {77, L"RRPC_FWQueryFirewallRules2_25"},
        {78, L"RRPC_FWAddFirewallRule2_26"},
        {79, L"RRPC_FWSetFirewallRule2_26"},
        {80, L"RRPC_FWEnumFirewallRules2_26"},
        {81, L"RRPC_FWQueryFirewallRules2_26"}
    };

std::map<int,std::wstring> remotespOpnums = {
        {0, L"RemoteSPAttach"},
        {1, L"RemoteSPEventProc"},
        {2, L"RemoteSPDetach"}
    };

std::map<int,std::wstring> SessEnvPublicRpcOpnums = {
        {0, L"RpcShadow2"}
    };

std::map<int,std::wstring> ssdpsrvOpnums = {
        {0, L"RegisterServiceRpc"},
        {1, L"DeregisterServiceRpcByUSN"},
        {2, L"DeregisterServiceRpc"},
        {3, L"UpdateCacheRpc"},
        {4, L"LookupCacheRpc"},
        {5, L"CleanupCacheRpc"},
        {6, L"InitializeSyncHandle"},
        {7, L"RemoveSyncHandle"},
        {8, L"RegisterNotificationRpc"},
        {9, L"GetNotificationRpc"},
        {10, L"WakeupGetNotificationRpc"},
        {11, L"DeregisterNotificationRpc"},
        {12, L"EnableDeviceHost"},
        {13, L"DisableDeviceHost"},
        {14, L"SetICSInterfaces"},
        {15, L"SetICSOff"}
    };

std::map<int,std::wstring> tapsrvOpnums = {
        {0, L"ClientAttach"},
        {1, L"ClientRequest"},
        {2, L"ClientDetach"}
    };

std::map<int,std::wstring> TermServEnumerationOpnums = {
        {0, L"RpcOpenEnum"},
        {1, L"RpcCloseEnum"},
        {2, L"RpcFilterByState"},
        {3, L"RpcFilterByCallersName"},
        {4, L"RpcEnumAddFilter"},
        {5, L"RpcGetEnumResult"},
        {6, L"RpcFilterBySessionType"},
        {7, L"Opnum7NotUsedOnWire"},
        {8, L"RpcGetSessionIds"},
        {9, L"RpcGetEnumResultEx"},
        {10, L"RpcGetAllSessions"},
        {11, L"RpcGetAllSessionsEx"}
    };

std::map<int,std::wstring> TermServNotificationOpnums = {
        {0, L"RpcWaitForSessionState"},
        {1, L"RpcRegisterAsyncNotification"},
        {2, L"RpcWaitAsyncNotification"},
        {3, L"RpcUnRegisterAsyncNotification"}
    };

std::map<int,std::wstring> TermSrvSessionOpnums = {
        {0, L"RpcWaitForSessionState"},
        {1, L"RpcRegisterAsyncNotification"},
        {2, L"RpcWaitAsyncNotification"},
        {3, L"RpcUnRegisterAsyncNotification"}
    };

std::map<int,std::wstring> trksvrOpnums = {
        {0, L"LnkSvrMessage"},
        {1, L"LnkSvrMessageCallback"}
    };

std::map<int,std::wstring> trkwksOpnums = {
        {0, L"Opnum0NotUsedOnWire"},
        {1, L"Opnum1NotUsedOnWire"},
        {2, L"Opnum2NotUsedOnWire"},
        {3, L"Opnum3NotUsedOnWire"},
        {4, L"Opnum4NotUsedOnWire"},
        {5, L"Opnum5NotUsedOnWire"},
        {6, L"Opnum6NotUsedOnWire"},
        {7, L"Opnum7NotUsedOnWire"},
        {8, L"Opnum8NotUsedOnWire"},
        {9, L"Opnum9NotUsedOnWire"},
        {10, L"Opnum10NotUsedOnWire"},
        {11, L"Opnum11NotUsedOnWire"},
        {12, L"LnkSearchMachine"}
    };

std::map<int,std::wstring> TsProxyRpcInterfaceOpnums = {
        {0, L"Opnum0NotUsedOnWire"},
        {1, L"TsProxyCreateTunnel"},
        {2, L"TsProxyAuthorizeTunnel"},
        {3, L"TsProxyMakeTunnelCall"},
        {4, L"TsProxyCreateChannel"},
        {5, L"Opnum5NotUsedOnWire"},
        {6, L"TsProxyCloseChannel"},
        {7, L"TsProxyCloseTunnel"},
        {8, L"TsProxySetupReceivePipe"},
        {9, L"TsProxySendToServer"}
    };

std::map<int,std::wstring> TSVIPPublicOpnums = {
        {0, L"RpcGetSessionIP"}
    };

std::map<int,std::wstring> W32TimeOpnums = {
        {0, L"W32TimeSync"},
        {1, L"W32TimeGetNetlogonServiceBits"},
        {2, L"W32TimeQueryProviderStatus"},
        {3, L"W32TimeQuerySource"},
        {4, L"W32TimeQueryProviderConfiguration"},
        {5, L"W32TimeQueryConfiguration"},
        {6, L"W32TimeQueryStatus"},
        {7, L"W32TimeLog"}
    };

std::map<int,std::wstring> WdsRpcInterfaceOpnums = {
        {0, L"WdsRpcMessage"}
    };

std::map<int,std::wstring> winsi2Opnums = {
        {0, L"R_WinsTombstoneDbRecs"},
        {1, L"R_WinsCheckAccess"}
    };

std::map<int,std::wstring> WitnessOpnums = {
        {0, L"WitnessrGetInterfaceList"},
        {1, L"WitnessrRegister"},
        {2, L"WitnessrUnRegister"},
        {3, L"WitnessrAsyncNotify"},
        {4, L"WitnessrRegisterEx"}
    };


std::unordered_map<std::wstring, std::map<int,std::wstring>> opnumMap = {
       { L"1ff70682-0a51-30e8-076d-740be8cee98b", atsvcOpnums },
       { L"378e52b0-c0a9-11cf-822d-00aa0051e40f", sasecOpnums },
       { L"0a74ef1c-41a4-4e06-83ae-dc74fb1cdd53", idletaskOpnums },
       { L"86d35949-83c9-4044-b424-db363231fd0c", ITaskSchedulerServiceOpnums },
       { L"99fcfec4-5260-101b-bbcb-00aa0021347a", IObjectExporterOpnums },
       { L"4d9f4ab8-7d1c-11cf-861e-0020af6e7c57", IActivationOpnums },
       { L"f5cc5a18-4264-101a-8c59-08002b2f8426", nspiOpnums },
       { L"9556dc99-828c-11cf-a37e-00aa003240c7", IWbemServicesOpnums },
       { L"f309ad18-d86a-11d0-a075-00c04fb68820", IWbemLevel1LoginOpnums },
       { L"f5cc59b4-4264-101a-8c59-08002b2f8426", FrsRpcOpnums },
       { L"00000143-0000-0000-c000-000000000046", IRemUnknown2Opnums },
       { L"000001a0-0000-0000-c000-000000000046", IRemoteSCMActivatorOpnums },
       { L"12345678-1234-abcd-ef00-01234567cffb", netlogonOpnums },
       { L"76f03f96-cdfd-44fc-a22c-64950a001209", IRemoteWinspoolOpnums },
       { L"894de0c0-0d55-11d3-a322-00c04fa321a1", InitShutdownOpnums },
       { L"d95afe70-a6d5-4259-822e-2c84da1ddb0d", WindowsShutdownOpnums },
       { L"12345678-1234-abcd-ef00-0123456789ab", spoolssOpnums },
       { L"4b324fc8-1670-01d3-1278-5a47bf6ee188", srvsvcOpnums },
       { L"12345778-1234-abcd-ef00-0123456789ac", samrOpnums },
       { L"338cd001-2244-31f1-aaaa-900038001003", winregOpnums },
       { L"3919286a-b10c-11d0-9ba8-00c04fd92ef5", dssetupOpnums },
       { L"367abb81-9844-35f1-ad32-98f038001003", svcctlOpnums },
       { L"6bffd098-a112-3610-9833-012892020162", browserOpnums },
       { L"3faf4738-3a21-4307-b46c-fdda9bb8c0d5", AudioSrvOpnums },
       { L"c386ca3e-9061-4a72-821e-498d83be188f", AudioRpcOpnums },
       { L"3c4728c5-f0ab-448b-bda1-6ce01eb0a6d6", dhcpcsvc6Opnums },
       { L"3c4728c5-f0ab-448b-bda1-6ce01eb0a6d5", RpcSrvDHCPCOpnums },
       { L"2f59a331-bf7d-48cb-9ec5-7c090d76e8b8", lcrpcOpnums },
       { L"5ca4a760-ebb1-11cf-8611-00a0245420ed", winstation_rpcOpnums },
       { L"d6d70ef0-0e3b-11cb-acc3-08002b1d29c3", NsiSOpnums },
       { L"d3fbb514-0e3b-11cb-8fad-08002b1d29c3", NsiCOpnums },
       { L"d6d70ef0-0e3b-11cb-acc3-08002b1d29c4", NsiMOpnums },
       { L"82273fdc-e32a-18c3-3f78-827929dc23ea", eventlogOpnums },
       { L"12b81e99-f207-4a4c-85d3-77b42f76fd14", ISeclogonOpnums },
       { L"8d0ffe72-d252-11d0-bf8f-00c04fd9126b", IKeySvcOpnums },
       { L"68b58241-c259-4f03-a2e5-a2651dcbc930", IKeySvc2Opnums },
       { L"0d72a7d4-6148-11d1-b4aa-00c04fb66ea0", ICertProtectOpnums },
       { L"f50aac00-c7f3-428e-a022-a6b71bfb9d43", ICatDBSvcOpnums },
       { L"12345778-1234-abcd-ef00-0123456789ab", lsarpcOpnums },
       { L"17fdd703-1827-4e34-79d4-24a55c53bb37", msgsvcOpnums },
       { L"5a7b91f8-ff00-11d0-a9b2-00c04fb6e6fc", msgsvcsendOpnums },
       { L"8d9f4e40-a03d-11ce-8f69-08003e30051b", pnpOpnums },
       { L"50abc2a4-574d-40b3-9d66-ee4fd5fba076", DnsServerOpnums },
       { L"57674cd0-5200-11ce-a897-08002b2e9c6d", lls_licenseOpnums },
       { L"342cfd40-3c6c-11ce-a893-08002b2e9c6d", llsrpcOpnums },
       { L"91ae6020-9e3c-11cf-8d7c-00aa00c091be", ICertPassageOpnums },
       { L"4fc742e0-4a10-11cf-8273-00aa004ae673", netdfsOpnums },
       { L"83da7c00-e84f-11d2-9807-00c04f8ec850", sfcapiOpnums },
       { L"2f5f3220-c126-1076-b549-074d078619da", nddeapiOpnums },
       { L"3dde7c30-165d-11d1-ab8f-00805f14db40", BackupKeyOpnums },
       { L"6bffd098-a112-3610-9833-46c3f87e345a", wkssvcOpnums },
       { L"e1af8308-5d1f-11c9-91a4-08002b14a0fa", epmpOpnums },
       { L"a4f1db00-ca47-1067-b31f-00dd010662da", exchange_mapiOpnums },
       { L"e3514235-4b06-11d1-ab04-00c04fc2dcd2", drsuapiOpnums },
       { L"45f52c28-7f9f-101a-b52b-08002b2efabe", winspipeOpnums },
       { L"afa8bd80-7d8a-11c9-bef4-08002b102989", mgmtOpnums },
       { L"0b1c2170-5732-4e0e-8cd3-d9b16f3b84d7", authzrOpnums },
       { L"e3d0d746-d2af-40fd-8a7a-0d7078bb7092", BitsPeerAuthOpnums },
       { L"b97db8b2-4c63-11cf-bff6-08002be23f2f", clusapiOpnums },
       { L"6bffd098-a112-3610-9833-46c3f874532d", dhcpsrvOpnums },
       { L"5b821720-f63b-11d0-aad2-00c04fc324db", dhcpsrv2Opnums },
       { L"7c44d7d4-31d5-424c-bd5e-2b3e1f323d22", dsaopOpnums },
       { L"77df7a80-f298-11d0-8358-00a024c480a8", dscommOpnums },
       { L"708cca10-9569-11d1-b2a5-0060977d8118", dscomm2Opnums },
       { L"df1941c5-fe89-4e79-bf10-463657acf44d", efsrpcOpnums },
       { L"c681d488-d850-11d0-8c52-00c04fd90f7e", efsrpc2Opnums },
       { L"a8e0653c-2744-4389-a61d-7373df8b2292", FileServerVssAgentOpnums },
       { L"897e2e5f-93f3-4376-9c9c-fd2277495c27", FrsTransportOpnums },
       { L"4bb8ab1d-9ef9-4100-8eb6-dd4b4e418b72", IADProxyOpnums },
       { L"c4b0c7d9-abe0-4733-a1e1-9fdedf260c7a", IADProxy2Opnums },
       { L"d99e6e71-fc88-11d0-b498-00a0c90312f3", ICertAdminDOpnums },
       { L"7fe0d935-dda6-443f-85d0-1cfb58fe41dd", ICertAdminD2Opnums },
       { L"d99e6e70-fc88-11d0-b498-00a0c90312f3", ICertRequestDOpnums },
       { L"5422fd3a-d4b8-4cef-a12e-e87d4ca22e90", ICertRequestD2Opnums },
       { L"00020400-0000-0000-c000-000000000046", IDispatchOpnums },
       { L"00020401-0000-0000-c000-000000000046", ITypeInfoOpnums },
       { L"d2d79df7-3400-11d0-b40b-00aa005ff586", IDMNotifyOpnums },
       { L"3a410f21-553f-11d1-8e5e-00a0c92c9d5d", IDMRemoteServerOpnums },
       { L"027947e1-d731-11ce-a357-000000000001", IEnumWbemClassObjectOpnums },
       { L"f6beaff7-1e19-4fbb-9f8f-b89e2018337c", IEventServiceOpnums },
       { L"7c4e1804-e342-483d-a43e-a850cfcc8d18", IIISApplicationAdminOpnums },
       { L"bd0c73bc-805b-4043-9c30-9a28d64dd7d2", IIISCertObjOpnums },
       { L"e8fb8620-588f-11d2-9d61-00c04f79c5fe", IIisServiceControlOpnums },
       { L"c3fcc19e-a970-11d2-8b5a-00a0c9b7c9c4", IManagedObjectOpnums },
       { L"034634fd-ba3f-11d1-856a-00a0c944138c", IManageTelnetSessionsOpnums },
       { L"8298d101-f992-43b7-8eca-5052d885b995", IMSAdminBase2WOpnums },
       { L"f612954d-3b0b-4c56-9563-227b7be624b4", IMSAdminBase3WOpnums },
       { L"70b51430-b6ca-11d0-b9b9-00a0c922e750", IMSAdminBaseWOpnums },
       { L"82ad4280-036b-11cf-972c-00aa006887b0", inetinfoOpnums },
       { L"6619a740-8154-43be-a186-0319578e02db", IRemoteDispatchOpnums },
       { L"00000131-0000-0000-c000-000000000046", IRemUnknownOpnums },
       { L"c5cebee2-9df5-4cdd-a08c-c2471bc144b4", IResourceManagerOpnums },
       { L"2a3eb639-d134-422d-90d8-aaa1b5216202", IResourceManager2Opnums },
       { L"b9785960-524f-11df-8b6d-83dcded72085", ISDKeyOpnums },
       { L"e65e8028-83e8-491b-9af7-aaf6bd51a0ce", IServerHealthReportOpnums },
       { L"20d15747-6c48-4254-a358-65039fd8c63c", IServerHealthReport2Opnums },
       { L"8165b19e-8d3a-4d0b-80c8-97de310db583", IServicedComponentInfoOpnums },
       { L"112b1dff-d9dc-41f7-869f-d67fee7cb591", ITpmVirtualSmartCardManagerOpnums },
       { L"fdf8a2b9-02de-47f4-bc26-aa85ab5e5267", ITpmVirtualSmartCardManager2Opnums },
       { L"3c745a97-f375-4150-be17-5950f694c699", ITpmVirtualSmartCardManager3Opnums },
       { L"1a1bb35f-abb8-451c-a1ae-33d98f1bef4a", ITpmVirtualSmartCardManagerStatusCallbackOpnums },
       { L"00000000-0000-0000-c000-000000000046", IUnknownOpnums },
       { L"d2d79df5-3400-11d0-b40b-00aa005ff586", IVolumeClientOpnums },
       { L"4bdafc52-fe6a-11d2-93f8-00105a11164a", IVolumeClient2Opnums },
       { L"135698d2-3a37-4d26-99df-e2bb6ae3ac61", IVolumeClient3Opnums },
       { L"deb01010-3a37-4d26-99df-e2bb6ae3ac61", IVolumeClient4Opnums },
       { L"214a0f28-b737-4026-b847-4f9e37d79529", IVssDifferentialSoftwareSnapshotMgmtOpnums },
       { L"01954e6b-9254-4e6e-808c-c9e05d007696", IVssEnumMgmtObjectOpnums },
       { L"ae1c7110-2f60-11d3-8a39-00c04f72d8e3", IVssEnumObjectOpnums },
       { L"fa7df749-66e7-4986-a27f-e2f04ae53772", IVssSnapshotMgmtOpnums },
       { L"29822ab7-f302-11d0-9953-00c04fd919c1", IWamAdminOpnums },
       { L"29822ab8-f302-11d0-9953-00c04fd919c1", IWamAdmin2Opnums },
       { L"4f7ca01c-a9e5-45b6-b142-2332a1339c1d", IWRMAccountingOpnums },
       { L"481e06cf-ab04-4498-8ffe-124a0a34296d", IWRMCalendarOpnums },
       { L"21546ae8-4da5-445e-987f-627fea39c5e8", IWRMConfigOpnums },
       { L"943991a5-b3fe-41fa-9696-7f7b656ee34b", IWRMMachineGroupOpnums },
       { L"59602eb6-57b0-4fd8-aa4b-ebf06971fe15", IWRMPolicyOpnums },
       { L"f31931a9-832d-481c-9503-887a0e6a79f0", IWRMProtocolOpnums },
       { L"fc910418-55ca-45ef-b264-83d4ce7d30e0", IWRMRemoteSessionMgmtOpnums },
       { L"bc681469-9dd9-4bf4-9b3d-709f69efe431", IWRMResourceGroupOpnums },
       { L"e33c0cc4-0482-101a-bc0c-02608c6ba218", locatorOpnums },
       { L"afc07e2e-311c-4435-808c-c483ffeec7c9", lsacapOpnums },
       { L"22e5386d-8b12-4bf0-b0ec-6a1ea419e366", NetEventForwarderOpnums },
       { L"d049b186-814f-11d1-9a3c-00c04fc9b232", NtFrsApiOpnums },
       { L"497d95a6-2d27-4bf5-9bbd-a6046957133c", RCMListenerOpnums },
       { L"bde95fdf-eee0-45de-9e12-e5a61cd0d4fe", RCMPublicOpnums },
       { L"6b5bdd1e-528c-422c-af8c-a4079be4fe48", RemoteFWOpnums },
       { L"2f5f6521-ca47-1068-b319-00dd010662db", remotespOpnums },
       { L"1257b580-ce2f-4109-82d6-a9459d0bf6bc", SessEnvPublicRpcOpnums },
       { L"4b112204-0e19-11d3-b42b-0000f81feb9f", ssdpsrvOpnums },
       { L"2f5f6520-ca46-1067-b319-00dd010662da", tapsrvOpnums },
       { L"88143fd0-c28d-4b2b-8fef-8d882f6a9390", TermServEnumerationOpnums },
       { L"11899a43-2b68-4a76-92e3-a3d6ad8c26ce", TermServNotificationOpnums },
       { L"484809d6-4239-471b-b5bc-61df8c23ac48", TermSrvSessionOpnums },
       { L"4da1c422-943d-11d1-acae-00c04fc2aa3f", trksvrOpnums },
       { L"300f3532-38cc-11d0-a3f0-0020af6b0add", trkwksOpnums },
       { L"44e265dd-7daf-42cd-8560-3cdb6e7a2729", TsProxyRpcInterfaceOpnums },
       { L"53b46b02-c73b-4a3e-8dee-b16b80672fc0", TSVIPPublicOpnums },
       { L"8fb6d884-2388-11d0-8c35-00c04fda2795", W32TimeOpnums },
       { L"1a927394-352e-4553-ae3f-7cf4aafca620", WdsRpcInterfaceOpnums },
       { L"811109bf-a4e1-11d1-ab54-00a0c91e9b45", winsi2Opnums },
       { L"ccd8c074-d0e5-4a40-92b4-d074faa6ba28", WitnessOpnums }
};

